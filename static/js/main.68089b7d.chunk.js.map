{"version":3,"sources":["images/ResumeImage.png","images/BlackjackImage.png","images/1920x620BunkerDown.png","images/2ofSpades.png","images/3ofSpades.png","images/4ofSpades.png","images/5ofSpades.png","images/6ofSpades.png","images/7ofSpades.png","images/8ofSpades.png","images/9ofSpades.png","images/10ofSpades.png","images/aceOfSpades.png","images/600x900BunkerDown.png","images/D20Image.png","components/Boop.js","components/RebassCard.js","components/BlackjackGame.js","components/HomeButton.js","components/Header.js","components/CharterProject.js","App.js","index.js"],"names":["module","exports","Boop","moveAmount","scaleAmount","timing","children","React","useState","isBooped","setIsBooped","style","display","backfaceVisibility","transform","transition","onMouseEnter","onMouseLeave","projects","blackjackImage","resumeImage","cards","containerStyle","flexWrap","justifyContent","cardStyle","p","borderRadius","background","boxShadow","marginTop","imageStyle","height","margin","paddingTop","nameStyle","fontFamily","color","typeStyle","textAlign","fontSize","getProjectCard","project","mx","exact","activeClassName","to","width","src","px","ProjectCards","deck","aiDeck","model","length","push","float","buttonStyle","HomeButton","headerStyle","fontStyle","Header","pageName","className","maxWidth","cardValues","2","twoOfSpades","3","threeOfSpades","4","fourOfSpades","5","fiveOfSpades","6","sixOfSpades","7","sevenOfSpades","8","eightOfSpades","9","nineOfSpades","10","tenOfSpades","11","aceOfSpades","Hand","handOwner","ai","this","owner","isAi","soft","blackjack","count","total","getTotalCardValue","busted","pop","handCount","forEach","card","console","log","gameStyle","align","border","fontWeight","messageStyle","playerSideStyle","aiSideStyle","dealerStyle","maxHeight","playerStyle","aiStyle","gameButtons","gameButtonStyles","false","backgroundColor","true","scoreStyle","dealerHand","playerHand","aiDealerHand","aiPlayerHand","playerStats","aiStats","totalGames","getCard","index","key","toString","BlackjackGame","props","loadTheModel","then","result","catch","startGame","state","aiHand","hitDisabled","stayDisabled","restartDisabled","playerDone","dealerDone","aiPlayerDone","message","aiMessage","playerWinPercentage","playerPushPercentage","playerLossPercentage","aiWinPercentage","aiPushPercentage","aiLossPercentage","dealer","player","setState","setStats","dealerType","hit","getWinner","getPrediction","predictions","getAiDealerMoves","hand","playerType","i","hand1","hand2","getAiMoves","endType","Math","floor","tf","hitPredictionInput","getCount","stayPredictionInput","hitPrediction","predict","dataSync","stayPrediction","winnerMessage","addCard","getDealerMoves","getPercentage","j","array","randomIndex","currentIndex","random","shuffle","slice","buildDeck","dealCards","checkForBlackjack","displayDealerTotal","getCards","disabled","onClick","stay","Component","tableStyle","whiteSpace","CharterProject","loadDataset","database","points","date","monthsAdding","year","parseInt","month","String","name","pointsArr","amounts","getQuery","amount","addMonth","header","namesArr","names","calculatePoints","printData","query","exec","values","output","value","sqlPromise","initSqlJs","locateFile","file","dataPromise","fetch","res","arrayBuffer","Promise","all","SQL","buf","db","Database","Uint8Array","data","reducer","previousValue","currentValue","getHeader","Object","entries","getValues","reduce","isDisabled","getPoints","Home","as","BunkerDown","bunkerDownHeader","DInfinity","Resume","BlackjackAI","Main","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68089b7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ResumeImage.859be2d8.png\";","module.exports = __webpack_public_path__ + \"static/media/BlackjackImage.6c27dff6.png\";","module.exports = __webpack_public_path__ + \"static/media/1920x620BunkerDown.1e17e2ed.png\";","module.exports = __webpack_public_path__ + \"static/media/2ofSpades.89062efb.png\";","module.exports = __webpack_public_path__ + \"static/media/3ofSpades.2a36870a.png\";","module.exports = __webpack_public_path__ + \"static/media/4ofSpades.d1039f10.png\";","module.exports = __webpack_public_path__ + \"static/media/5ofSpades.4a890ff4.png\";","module.exports = __webpack_public_path__ + \"static/media/6ofSpades.465b083d.png\";","module.exports = __webpack_public_path__ + \"static/media/7ofSpades.397642b3.png\";","module.exports = __webpack_public_path__ + \"static/media/8ofSpades.a855651a.png\";","module.exports = __webpack_public_path__ + \"static/media/9ofSpades.1476e4c1.png\";","module.exports = __webpack_public_path__ + \"static/media/10ofSpades.567c4b33.png\";","module.exports = __webpack_public_path__ + \"static/media/aceOfSpades.001171ec.png\";","module.exports = __webpack_public_path__ + \"static/media/600x900BunkerDown.2bb3954a.png\";","module.exports = __webpack_public_path__ + \"static/media/D20Image.87e620db.png\";","import React from 'react';\r\n\r\nconst Boop = ({ moveAmount = 0, scaleAmount = 0, timing = 150, children }) => {\r\n  const [isBooped, setIsBooped] = React.useState(false);\r\n  const style = {\r\n    display: 'inline-block',\r\n    backfaceVisibility: 'hidden',\r\n    transform: isBooped\r\n      ? `translate(${moveAmount}px) scale(${scaleAmount}, ${scaleAmount})`\r\n      : `translate(0px) scale(1, 1)`,\r\n    transition: `transform ${timing}ms`,\r\n  };\r\n\r\n  const onTrigger = () => {\r\n    setIsBooped(true);\r\n  };\r\n  const offTrigger = () => {\r\n    setIsBooped(false);\r\n  };\r\n  \r\n  return (\r\n    <span onMouseEnter={onTrigger} onMouseLeave={offTrigger} style={style}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Boop;\r\n","import React from 'react'\r\nimport { Box, Card, Image, Heading, Text, Flex } from 'rebass'\r\nimport { NavLink } from 'react-router-dom'\r\nimport bunkerDownImage from '../images/600x900BunkerDown.png'\r\nimport dInfinityImage from '../images/D20Image.png'\r\nimport resumeImage from '../images/ResumeImage.png'\r\nimport blackjackImage from '../images/BlackjackImage.png'\r\nimport Boop from './Boop.js'\r\n\r\nvar projects = {//\"Resume\": {\"type\":\"Master Resume\", \"image\":resumeImage, \"Link\": '/Resume'},\r\n                //\"Bunker Down\": {\"type\":\"Video Game\", \"image\":bunkerDownImage, \"Link\": '/BunkerDown'},\r\n                //\"DInfinity\": {\"type\":\"Video Game\", \"image\":dInfinityImage, \"Link\": '/DInfinity'},\r\n                \"Blackjack AI\": {\"type\": \"Neural Network\", \"image\":blackjackImage, \"Link\": './BlackjackAI'},\r\n                \"Charter Project\": {\"type\": \"SQL React Project\", \"image\":resumeImage, \"Link\": './CharterProject'},\r\n\r\n               }\r\n\r\n\r\nvar cards = []\r\nconst ProjectCards = () => {\r\n  if (cards.length === 0) {\r\n    for (var project in projects) {\r\n      cards.push(getProjectCard(project))\r\n    }\r\n  }\r\n  return (\r\n    <Flex style={containerStyle}>\r\n    {cards}\r\n    </Flex>\r\n  )\r\n};\r\n\r\nconst containerStyle = {\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst cardStyle = {\r\n  p:1,\r\n  borderRadius: 10,\r\n  background: '#1F2833',\r\n  boxShadow: '0 0 16px rgba(0, 0, 0, .25)',\r\n  marginTop: '5%'\r\n}\r\n\r\nconst imageStyle = {\r\n  height:\"300px\",\r\n  display:\"block\",\r\n  margin:\"auto\",\r\n  paddingTop: '5%'\r\n}\r\n\r\nconst nameStyle = {\r\n  fontFamily:\"Arial\",\r\n  color:\"#66FCF1\"\r\n}\r\n\r\nconst typeStyle = {\r\n  textAlign:\"center\",\r\n  color:\"#66FCF1\",\r\n  fontSize: 15\r\n}\r\n\r\nfunction getProjectCard(project) {\r\n  return (\r\n    <Boop moveAmount={-10} scaleAmount={1.1} timing={200} mx='auto'>\r\n      <Box margin='10px'>\r\n        <NavLink exact activeClassName=\"current\" to={projects[project][\"Link\"]}>\r\n          <Box width={256} mx='auto'>\r\n            <Card style={cardStyle}>\r\n                <Image src={projects[project][\"image\"]} style={imageStyle}/>\r\n              <Box px={2}>\r\n                <Heading style={nameStyle}>\r\n                  {project}\r\n                </Heading>\r\n                <Text style={typeStyle}>\r\n                  {projects[project][\"type\"]}\r\n                </Text>\r\n              </Box>\r\n            </Card>\r\n          </Box>\r\n        </NavLink>\r\n      </Box>\r\n    </Boop>\r\n  );\r\n}\r\n\r\nexport default ProjectCards;\r\n","import React from 'react';\r\n//import { setState } from 'react'\r\nimport '../App.css';\r\nimport { Box, Image } from 'rebass'\r\nimport twoOfSpades from '../images/2ofSpades.png'\r\nimport threeOfSpades from '../images/3ofSpades.png'\r\nimport fourOfSpades from '../images/4ofSpades.png'\r\nimport fiveOfSpades from '../images/5ofSpades.png'\r\nimport sixOfSpades from '../images/6ofSpades.png'\r\nimport sevenOfSpades from '../images/7ofSpades.png'\r\nimport eightOfSpades from '../images/8ofSpades.png'\r\nimport nineOfSpades from '../images/9ofSpades.png'\r\nimport tenOfSpades from '../images/10ofSpades.png'\r\nimport aceOfSpades from '../images/aceOfSpades.png'\r\nimport * as tf from '@tensorflow/tfjs'\r\n\r\nconst cardStyle = {\r\n  height: 'auto',\r\n  maxWidth: '20%',\r\n}\r\n\r\nconst cardValues = {\r\n  2: twoOfSpades,\r\n  3: threeOfSpades,\r\n  4: fourOfSpades,\r\n  5: fiveOfSpades,\r\n  6: sixOfSpades,\r\n  7: sevenOfSpades,\r\n  8: eightOfSpades,\r\n  9: nineOfSpades,\r\n  10: tenOfSpades,\r\n  11: aceOfSpades\r\n}\r\n\r\nclass Hand {\r\n  constructor(handOwner, ai = false) {\r\n    this.owner = handOwner;\r\n    this.isAi = ai;\r\n    this.cards = [];\r\n    this.soft = 0;\r\n    this.blackjack = false;\r\n    this.count = 0;\r\n    this.total = this.getTotalCardValue();\r\n    this.busted = false;\r\n  }\r\n\r\n  addCard(deck) {\r\n    this.cards.push(deck.pop())\r\n    this.getTotalCardValue()\r\n  }\r\n\r\n  getTotalCardValue() {\r\n    var total = 0\r\n    var handCount = 0\r\n    this.cards.forEach(card => {\r\n      if (card <= 6) {\r\n        handCount += 1\r\n      }\r\n      else if (card >= 10) {\r\n        handCount -= 1\r\n      }\r\n      this.count = handCount\r\n      if (card === 11 && total + card > 21) {\r\n        card = 1\r\n      }\r\n      else if (card === 11 && this.soft === 0) {\r\n        this.soft = 1\r\n      }\r\n      else if (total + card > 21 && this.soft === 1) {\r\n        total -= 10\r\n        this.soft = 0\r\n      }\r\n      total += card\r\n      this.total = total\r\n    });\r\n\r\n    this.total = total\r\n    if (total > 21) {\r\n      console.log(this.owner, \"busted!\")\r\n      this.busted = true;\r\n    }\r\n    else {\r\n      this.busted = false;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nconst gameStyle = {\r\n  background: 'green',\r\n  align: 'center',\r\n  display: 'flex',\r\n  borderRadius: '5px',\r\n  border: '1px solid black',\r\n  fontWeight: 'bold',\r\n}\r\n\r\nconst messageStyle = {\r\n  background: 'DarkGreen',\r\n  textAlign: 'center',\r\n  borderRadius: '20px, 20px, 20px, 20px',\r\n  fontFamily: 'Arial',\r\n\r\n}\r\n\r\nconst playerSideStyle = {\r\n  width: '50%',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst aiSideStyle = {\r\n  height: '100%',\r\n  width: '50%',\r\n}\r\n\r\nconst dealerStyle = {\r\n  height: 'auto',\r\n  maxHeight: '25em',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst playerStyle = {\r\n  background: 'green',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst aiStyle = {\r\n  background: 'green',\r\n}\r\n\r\nconst gameButtons = {\r\n  margin: 'auto',\r\n  width: '100%',\r\n  align: 'center',\r\n}\r\n\r\nconst gameButtonStyles = {\r\n  false: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '50%',\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black',\r\n    fontWeight: 'bold',\r\n  },\r\n  true: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '50%',\r\n    backgroundColor: \"gray\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black',\r\n    fontWeight: 'bold',\r\n  }\r\n};\r\n\r\nconst scoreStyle = {\r\n  textAlign: 'center',\r\n  fontWeight: 'bold',\r\n  paddingTop: '20px',\r\n}\r\n\r\nvar deck;\r\nvar aiDeck;\r\nvar dealerHand = new Hand(\"dealer\");\r\nvar playerHand = new Hand(\"player\");\r\nvar aiDealerHand = new Hand(\"aiDealer\");\r\nvar aiPlayerHand = new Hand(\"player\", true);\r\nvar model\r\nvar playerStats = {\r\n  \"win\": 0,\r\n  \"push\": 0,\r\n  \"loss\": 0\r\n}\r\nvar aiStats = {\r\n  \"win\": 0,\r\n  \"push\": 0,\r\n  \"loss\": 0\r\n}\r\nvar totalGames = 0\r\n\r\nclass BlackjackGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    model = this.loadTheModel()\r\n    .then(function(result) {\r\n      return result\r\n    })\r\n    .catch(console.log(\"failure\"))\r\n    console.log(\"model: \", model)\r\n    this.startGame();\r\n    this.state = {\r\n      playerHand : [],\r\n      dealerHand: [],\r\n      aiHand: [],\r\n      aiDealerHand: [],\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      aiPlayerDone: false,\r\n      message: \"Hit Or Stay\",\r\n      aiMessage: \"AI Is Waiting\",\r\n      playerWinPercentage: 0,\r\n      playerPushPercentage: 0,\r\n      playerLossPercentage: 0,\r\n      aiWinPercentage: 0,\r\n      aiPushPercentage: 0,\r\n      aiLossPercentage: 0,\r\n    }\r\n  }\r\n\r\n  checkForBlackjack(dealer, player) {\r\n    if (dealer.total === 21 && player.total === 21) {\r\n      this.setState({\r\n        message: \"Push!\",\r\n      });\r\n      this.setStats(\"push\", player.isAi)\r\n      return true;\r\n    }\r\n    else if (dealer.total === 21) {\r\n      this.setState({\r\n        message: \"Dealer has blackjack!\"\r\n      })\r\n      this.setStats(\"loss\", true)\r\n      this.setStats(\"loss\", false)\r\n      return true\r\n    }\r\n    else if (player.total === 21) {\r\n      this.setState({\r\n        message: \"Player has blackjack!\"\r\n      })\r\n      this.setStats(\"win\", true)\r\n      this.setStats(\"win\", false)\r\n      return true\r\n    }\r\n    else return false\r\n  }\r\n\r\n  displayDealerTotal(dealerType = \"human\") {\r\n    if (dealerHand.cards.length === 2) {\r\n      return dealerHand.cards[0]\r\n    }\r\n    if (dealerType === \"ai\") {\r\n      return aiDealerHand.getTotalCardValue()\r\n    }\r\n    return dealerHand.getTotalCardValue()\r\n  }\r\n\r\n  async getAiDealerMoves() {\r\n    console.log(\"starting dealer moves\")\r\n    console.log(\"dealer total\", aiDealerHand.getTotalCardValue())\r\n    while (aiDealerHand.getTotalCardValue() < 17) {\r\n        console.log(\"aiDealer is hitting\")\r\n        this.hit(\"aiDealer\")\r\n    }\r\n    this.getWinner(aiDealerHand, aiPlayerHand)\r\n    }\r\n\r\n  async getAiMoves() {\r\n    while (aiPlayerHand.busted === false && aiPlayerHand.total != 21) {\r\n      var predictions = await this.getPrediction()\r\n      console.log(\"predictions: \", predictions)\r\n      if (predictions[0] >= predictions[1] && predictions[0] > 0.5) {\r\n        console.log(\"ai is hitting\")\r\n        this.hit(\"aiPlayer\")\r\n      }\r\n      else {\r\n        console.log(\"ai is holding\")\r\n        break\r\n      }\r\n    }\r\n    this.getAiDealerMoves(aiDealerHand, aiPlayerHand)\r\n  }\r\n\r\n  getCards(hand, playerType) {\r\n    var cards = []\r\n    for (var i=0; i<hand.cards.length; i++) {\r\n        var card = hand.cards[i]\r\n        cards.push(getCard(card, i))\r\n        if (playerType === \"dealer\" & this.state.playerDone === false) {\r\n          i = hand.cards.length\r\n        }\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  getCount(hand1, hand2) {\r\n    return hand1.count + hand2.count\r\n  }\r\n\r\n  getDealerMoves(dealer, player) {\r\n    while (dealer.getTotalCardValue() < 17) {\r\n      if (dealer.owner === \"dealer\") {\r\n        this.hit(\"dealer\")\r\n      }\r\n      else {\r\n        this.hit(\"aiDealer\")\r\n      }\r\n    }\r\n    this.getWinner(dealer, player)\r\n    this.getAiMoves()\r\n    this.setState({\r\n      restartDisabled: false\r\n    })\r\n  }\r\n\r\n  getPercentage(playerType = \"human\", endType) {\r\n    if (playerType === \"ai\") {\r\n      return Math.floor(100 * (aiStats[endType] / (totalGames + 1)))\r\n    }\r\n    return Math.floor(100 * (playerStats[endType] / (totalGames + 1)))\r\n  }\r\n\r\n  async getPrediction() {\r\n    model = await tf.loadLayersModel('model.json');\r\n    var hitPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 1]])\r\n    var stayPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 0]])\r\n    var hitPrediction = model.predict(hitPredictionInput).dataSync()[0]\r\n    var stayPrediction = model.predict(stayPredictionInput).dataSync()[0]\r\n    console.log(\"hit: \", hitPrediction, \" stay: \", stayPrediction)\r\n    return [hitPrediction, stayPrediction]\r\n    }\r\n\r\n  getWinner(dealer, player) {\r\n    var winnerMessage = \"\"\r\n    if (player.total > 21) {\r\n      winnerMessage = \"Player Busted! Dealer Wins!\"\r\n      this.setStats(\"loss\", player.isAi)\r\n    }\r\n    else if (dealer.busted) {\r\n      winnerMessage = \"Dealer Busted! Player Wins!\"\r\n      this.setStats(\"win\", player.isAi)\r\n    }\r\n    else if (dealer.total > player.total) {\r\n      winnerMessage = \"Dealer Wins!\"\r\n      this.setStats(\"loss\", player.isAi)\r\n    }\r\n    else if (player.total > dealer.total) {\r\n      winnerMessage = \"Player Wins!\"\r\n      this.setStats(\"win\", player.isAi)\r\n    }\r\n    else {\r\n      winnerMessage = \"Push!\"\r\n      this.setStats(\"push\", player.isAi)\r\n      }\r\n    if (dealer.owner === \"dealer\") {\r\n      this.setState({\r\n        message: winnerMessage\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        aiMessage: winnerMessage\r\n      })\r\n    }\r\n  }\r\n\r\n  hit(handOwner) {\r\n   switch (handOwner) {\r\n     case \"player\":\r\n       this.setState({\r\n         playerHand: playerHand.addCard(deck)\r\n       })\r\n       if (playerHand.busted) {\r\n         console.log(\"bust\");\r\n         this.setState({\r\n         hitDisabled: true,\r\n         stayDisabled: true,\r\n         restartDisabled: false,\r\n         playerDone: true,\r\n         dealerDone: true,\r\n         message: \"Player busted! Dealer Wins!\"\r\n       })\r\n       this.getDealerMoves(dealerHand, playerHand)\r\n       }\r\n       break;\r\n     case \"dealer\":\r\n        this.setState({\r\n          dealerHand: dealerHand.addCard(deck)\r\n        })\r\n        if (dealerHand.busted) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            message: \"Dealer Busted! Player Wins!\"\r\n          })\r\n        }\r\n        else if (dealerHand.total >= 17 && dealerHand.total <= 21) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            restartDisabled: false,\r\n          })\r\n        }\r\n        break;\r\n     case \"aiPlayer\":\r\n        this.setState({\r\n          aiPlayerHand: aiPlayerHand.addCard(aiDeck)\r\n        })\r\n        if (aiPlayerHand.busted) {\r\n          this.setState({\r\n            aiPlayerDone: true,\r\n            aiMessage: \"AI Busted! AI Dealer Wins!\"\r\n          })\r\n        }\r\n        break;\r\n     case \"aiDealer\":\r\n       this.setState({\r\n         aiDealerHand: aiDealerHand.addCard(aiDeck)\r\n       })\r\n       if (aiDealerHand.busted) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           aiMessage: \"Dealer Busted! Player Wins!\"\r\n         })\r\n       }\r\n       else if (aiDealerHand.total >= 17 && aiDealerHand.total <= 21) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           restartDisabled: false,\r\n         })\r\n       }\r\n        break;\r\n     default:\r\n        console.log(\"Error: Player type not recognized\")\r\n        break;\r\n      }\r\n  }\r\n\r\n  async loadTheModel () {\r\n    var model\r\n    try {\r\n      model = await tf.loadLayersModel('model.json');\r\n      return model\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"failed load model\");\r\n    }\r\n  }\r\n\r\n  setStats(endType, isAi) {\r\n    if (isAi === true) {\r\n      aiStats[endType] += 1;\r\n    }\r\n    else {\r\n      playerStats[endType] += 1\r\n    }\r\n    this.setState({\r\n      playerWinPercentage: this.getPercentage(\"human\", \"win\"),\r\n      playerPushPercentage: this.getPercentage(\"human\", \"push\"),\r\n      aiWinPercentage: this.getPercentage(\"ai\", \"win\"),\r\n      aiPushPercentage: this.getPercentage(\"ai\", \"push\"),\r\n      playerLossPercentage: 100 - this.getPercentage(\"human\", \"win\") - this.getPercentage(\"human\", \"push\"),\r\n      aiLossPercentage: 100 - this.getPercentage(\"ai\", \"win\") - this.getPercentage(\"ai\", \"push\")\r\n    })\r\n    console.log(\"playerStats: \", playerStats, \" totalGames: \", totalGames)\r\n    console.log(\"aiStats: \", aiStats, \" totalGames: \", totalGames)\r\n  }\r\n\r\n  startGame() {\r\n    totalGames += 1\r\n    this.setState({\r\n      playerHand: [],\r\n      dealerHand: [],\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      message: \"hit or stay\",\r\n      aiMessage: \"AI Side\"\r\n    })\r\n    buildDeck()\r\n    dealCards()\r\n    if (this.checkForBlackjack(dealerHand, playerHand) === true) {\r\n      this.setState({\r\n        hitDisabled: true,\r\n        stayDisabled: true,\r\n        restartDisabled: false\r\n      })\r\n    }\r\n    console.log('start')\r\n  }\r\n\r\n  stay(hand) {\r\n    switch (hand.owner) {\r\n      case \"player\":\r\n        this.setState({\r\n          hitDisabled: true,\r\n          stayDisabled: true,\r\n          playerDone: true,\r\n        })\r\n        this.getDealerMoves(dealerHand, playerHand)\r\n      case \"aiPlayer\":\r\n        console.log(\"aiPlayer stayed\")\r\n      default:\r\n        console.log(\"unknown player stayed\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h2>\r\n        What is Blackjack AI?\r\n      </h2>\r\n      <h3>\r\n        Blackjack AI is a trained neural network that learned from over 10,000 hands of Blackjack.\r\n        This game will allow you to play a hand of Blackjack and compare outcomes with Blackjack AI playing the same hand.\r\n        Blackjack AI does not have any unfair advantage. It uses the same information you are given as a player.\r\n      </h3>\r\n      <h2>\r\n        Tech Stack\r\n      </h2>\r\n      <h3>\r\n        <p>AI: Python, keras, Tensorflow, TensorflowJS, and JavaScript</p>\r\n        <p>Website: ReactJS, JavaScript, html, CSS3</p>\r\n        <p>Hosted on Github Pages</p>\r\n      </h3>\r\n      <h2>\r\n        Rules\r\n      </h2>\r\n      <h3>\r\n        <p>Get the total of your cards closest to 21 without going over</p>\r\n        <p>There are 2 decks of cards. Dealer stays on soft 17. No splitting (sorry)</p>\r\n      </h3>\r\n      <Box style={scoreStyle}>\r\n        <p>Total Games: {totalGames}</p>\r\n        <p>Player Wins: {this.state.playerWinPercentage}% AI Wins: {this.state.aiWinPercentage}%</p>\r\n        <p>Player Pushes: {this.state.playerPushPercentage}% AI Pushes: {this.state.aiPushPercentage}%</p>\r\n        <p>Player Losses: {this.state.playerLossPercentage}% AI Loss: {this.state.aiLossPercentage}%</p>\r\n      </Box>\r\n      <Box style={gameStyle}>\r\n        <Box style={playerSideStyle}>\r\n          <Box style={messageStyle}>\r\n            {this.state.message}\r\n          </Box>\r\n          <Box>\r\n            Dealer: {this.displayDealerTotal()}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            {this.getCards(dealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box>\r\n            Player: {playerHand.getTotalCardValue()}\r\n          </Box>\r\n        <Box style={playerStyle}>\r\n          {this.getCards(playerHand, \"player\")}\r\n          <div style={gameButtons}>\r\n            <button disabled={this.state.hitDisabled} onClick={() => this.hit(\"player\")} style={gameButtonStyles[this.state.hitDisabled]}>HIT</button>\r\n            <button disabled={this.state.stayDisabled} onClick={() => this.stay(playerHand)} style={gameButtonStyles[this.state.stayDisabled]}>STAY</button>\r\n            <button disabled={this.state.restartDisabled} onClick={() => this.startGame()} style={gameButtonStyles[this.state.restartDisabled]}>PLAY AGAIN</button>\r\n          </div>\r\n          </Box>\r\n        </Box>\r\n        <Box style={aiSideStyle}>\r\n          <Box style={messageStyle}>\r\n            {this.state.aiMessage}\r\n          </Box>\r\n          <Box>\r\n            AI Dealer: {this.displayDealerTotal(\"ai\")}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            {this.getCards(aiDealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box>\r\n            AI Player: {aiPlayerHand.getTotalCardValue()}\r\n          </Box>\r\n          <Box style={aiStyle}>\r\n            {this.getCards(aiPlayerHand, \"aiPlayer\")}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDeck() {\r\n  deck = []\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 2; j < 12; j++) {\r\n      if (j === 10) {\r\n        deck.push(j)\r\n        deck.push(j)\r\n        deck.push(j)\r\n      }\r\n      deck.push(j)\r\n    }\r\n  }\r\n  shuffle(deck)\r\n  aiDeck = deck.slice()\r\n  console.log(\"building deck\")\r\n}\r\n\r\nfunction dealCards() {\r\n  playerHand.cards = [];\r\n  dealerHand.cards = [];\r\n  aiPlayerHand.cards = [];\r\n  aiDealerHand.cards = [];\r\n  for (var i = 0; i < 2; i++) {\r\n    playerHand.addCard(deck)\r\n    dealerHand.addCard(deck)\r\n    aiPlayerHand.addCard(aiDeck)\r\n    aiDealerHand.addCard(aiDeck)\r\n  }\r\n  aiPlayerHand.getTotalCardValue()\r\n  aiDealerHand.getTotalCardValue()\r\n  console.log(\"dealing cards\")\r\n}\r\n\r\nfunction getCard(card, index) {\r\n  return (\r\n    <Image key={index.toString()} style={cardStyle} src={cardValues[card]}/>\r\n  );\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default BlackjackGame;\r\n","import React from 'react';\r\nimport {Button} from 'rebass'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Boop from './Boop.js'\r\n\r\nconst containerStyle = {\r\n  color: 'white',\r\n  width: '15%',\r\n  float: 'left',\r\n}\r\n\r\nconst buttonStyle = {\r\n  background: '#45A29E',\r\n  height: '100%',\r\n  borderRadius: '10px'\r\n}\r\n\r\nconst HomeButton = () => {\r\n  return (\r\n  <Boop scaleAmount={1.1} style={containerStyle}>\r\n    <NavLink exact activeClassName=\"current\" to={'./'}>\r\n      <Button style={buttonStyle}>\r\n        Home\r\n      </Button>\r\n    </NavLink>\r\n  </Boop>\r\n  )\r\n}\r\n\r\nexport default HomeButton;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport HomeButton from './HomeButton.js'\r\n\r\nconst headerStyle = {\r\n  width: '100%',\r\n  textAlign: 'center',\r\n  background: '#1F2833',\r\n  color: '#66FCF1',\r\n  fontSize: '300%',\r\n  borderRadius: '10px',\r\n  fontStyle: 'oblique',\r\n}\r\n\r\nconst Header = ({pageName}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <HomeButton/>\r\n      <div style={headerStyle}>{pageName}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","//Brett Schlereth\r\n//Charter Homework Project\r\n//9/13/2021\r\n\r\nimport React from 'react';\r\nimport initSqlJs from 'sql.js';\r\nimport '../App.css';\r\n\r\nconst buttonStyle = {\r\n  false: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '25%',\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black',\r\n    fontWeight: 'bold',\r\n  },\r\n  true: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '25%',\r\n    backgroundColor: \"gray\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black',\r\n    fontWeight: 'bold',\r\n  }\r\n};\r\n\r\nconst tableStyle = {\r\n  whiteSpace: 'pre-wrap',\r\n  width: '100%'\r\n}\r\n\r\n//global variables so user input for the starting month and time span could be used\r\nconst STARTINGMONTH = \"2021-09\"\r\nconst NUMOFMONTHS = 3\r\n\r\nclass CharterProject extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //Loads the dataset at the starting of the page\r\n    this.loadDataset()\r\n    this.state={\r\n      database: null,\r\n      points: null,\r\n    }\r\n  }\r\n\r\n  //Given a date ex.\"2021-09\", adds a month returning a date in the same format ex.\"2021-10\"\r\n  addMonth(date, monthsAdding) {\r\n    //Parses the date into year and month\r\n    var year = parseInt(date.slice(0,4))\r\n    var month = parseInt(date.slice(5)) + 1\r\n    if (month > 12) {\r\n      month = 1\r\n      year += 1\r\n    }\r\n    if (month < 10) { month = \"0\" + String(month)}\r\n    //Puts the year and month back into the original format\r\n    var date = String(year) + \"-\" + String(month)\r\n    return date\r\n  }\r\n\r\n  //Given one customer's name, this will return the customer's points for each month\r\n  calculatePoints(name) {\r\n    var pointsArr = []\r\n    var month = STARTINGMONTH\r\n    for (var j = 0; j < NUMOFMONTHS; j++) {\r\n      let points = 0\r\n      //Queries the SQLite file for the customer's transactions in a given month\r\n      var amounts = this.getQuery(\"SELECT Amount FROM transactionData WHERE CustomerName='\"\r\n       + name + \"'\" + \" AND strftime('%Y-%m', Date)='\" + month + \"'\")\r\n      //Calculates the points based on the transaction amount\r\n      for (var i = 0; i < amounts.length; i++) {\r\n        var amount = Math.floor(amounts[i][0])\r\n        if (amount > 100) {\r\n          points += 2 * (amount - 100) + 50\r\n        }\r\n        else if (amount > 50) {\r\n          points += (amount - 50)\r\n        }\r\n      }\r\n      month = this.addMonth(month, j)\r\n      //Adds the customer's point total to the array\r\n      pointsArr.push(points)\r\n    }\r\n    //Returns the customer's points\r\n    return pointsArr\r\n  }\r\n\r\n  //Gets the header for the top of the table\r\n  getHeader() {\r\n    var header = []\r\n    var date = STARTINGMONTH\r\n    for (var i = 0; i < NUMOFMONTHS; i++) {\r\n      header.push(<td key={date}>{date}</td>)\r\n      date = this.addMonth(date, i)\r\n    }\r\n    return header\r\n  }\r\n\r\n  //Fetches a list of every customer and calculates their monthly points\r\n  getPoints() {\r\n    //Queries the SQLite file for a list of every customer name\r\n    var namesArr = this.getQuery(\"SELECT DISTINCT CustomerName FROM transactionData\")\r\n    //Creates a dictionary that will hold each customer's name and their points for each month\r\n    var names = {}\r\n    //Assigns the total points to each name\r\n    for (var i = 0; i < namesArr.length; i++) {\r\n      names[namesArr[i][0]] = this.calculatePoints(namesArr[i][0]);\r\n    }\r\n    //Once all of the data is collected, it is sent to be printed\r\n    this.printData(names)\r\n  }\r\n\r\n  //Returns the values of a given SQL query\r\n  getQuery(query) {\r\n    return this.state.database.exec(query)[0][\"values\"]\r\n  }\r\n\r\n  //Gets the point values for each month\r\n  getValues(values) {\r\n    let output = []\r\n    values.forEach(value => output.push(<td key={value}>{value}</td>))\r\n    return output\r\n  }\r\n\r\n  //Disables the button after pressing the button\r\n  isDisabled() {\r\n    if (this.state.points != null) { return true } return false\r\n  }\r\n\r\n  //Fetches the database from the public files and stores it in the db state value\r\n  async loadDataset () {\r\n    const sqlPromise = initSqlJs({locateFile: file => `sql-wasm.wasm`});\r\n    const dataPromise = fetch(\"transactionSQL.sqlite\").then(res => res.arrayBuffer());\r\n    try {\r\n      const [SQL, buf] = await Promise.all([sqlPromise, dataPromise])\r\n        var db = new SQL.Database(new Uint8Array(buf));\r\n        this.setState({\r\n          database: db\r\n        })\r\n    }\r\n    //Throws an error if the database fails to load\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"Failed to load database\")\r\n    }\r\n  }\r\n\r\n  //Calculates each customer's total and formats the given data into a table\r\n  printData(data) {\r\n    if (data != null) {\r\n      const reducer = (previousValue, currentValue) => previousValue + currentValue;\r\n      var output = []\r\n      //Creates the header for the table\r\n      output.push(<tr key=\"tableHeader\"><td>{\"NAME\"}</td>{this.getHeader()}<td>{\"TOTAL POINTS\"}</td></tr>)\r\n      //Adds the customer's data to the table\r\n      for (const [key, value] of Object.entries(data)) {\r\n        output.push(<tr key={key+\"1\"}><td>{String(key)}</td>{this.getValues(value)}<td>{String(value.reduce(reducer))}</td></tr>)\r\n      }\r\n      //Updates the points state to be rendered on screen\r\n      this.setState({\r\n        points: output\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <table style={tableStyle}>\r\n          <tbody>\r\n            {this.state.points}\r\n          </tbody>\r\n        </table>\r\n        <button style={buttonStyle[this.isDisabled()]} disabled={this.isDisabled()} onClick={() => this.getPoints()}> Get Points </button>\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default CharterProject;\r\n"," import React from 'react';\r\n import { Box, Card, Image} from 'rebass'\r\n import './App.css';\r\n import ProjectCards from './components/RebassCard.js'\r\n import { Switch, Route } from 'react-router-dom'\r\n import Header from './components/Header.js'\r\n import bunkerDownHeader from './images/1920x620BunkerDown.png'\r\n import BlackjackGame from './components/BlackjackGame.js'\r\n import Charter from './components/CharterProject.js'\r\n\r\nconst App = () => (\r\n  <div className='App'>\r\n    <Main />\r\n  </div>\r\n);\r\n\r\nconst Home = () => (\r\n  <div className='Home'>\r\n    <Box>\r\n      <Card as='h1' mx='auto'>Brett Schlereth</Card>\r\n    </Box>\r\n    <ProjectCards/>\r\n  </div>\r\n)\r\n\r\nconst BunkerDown = () => (\r\n  <div className='BunkerDown'>\r\n    <Header pageName=\"Bunker Down\"/>\r\n    <div>\r\n      <Image src={bunkerDownHeader}/>\r\n      Bunker Down is an arcade-style survival game I developed using the Godot Game Engine.\r\n      The goal is to avoid the bombs falling from the sky, collect coins, and make your way to\r\n      the underground bunker below.\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst CharterProject = () => (\r\n  <div className='CharterProject'>\r\n    <Header pageName='Charter Project'/>\r\n    <div>\r\n      <Charter/>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst DInfinity = () => (\r\n  <div className='DInfinity'>\r\n    <Header pageName=\"DInfinity\"/>\r\n    <div>\r\n      content\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst Resume = () => (\r\n  <div className='Resume'>\r\n    <Header pageName=\"Resume\"/>\r\n    <div>\r\n      Content\r\n\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst BlackjackAI = () => (\r\n  <div className='BlackjackAI'>\r\n    <Header pageName=\"Blackjack AI\"/>\r\n    <BlackjackGame/>\r\n  </div>\r\n)\r\n\r\nconst Main = () => (\r\n  <Switch>\r\n    <Route exact path='/' component={Home}></Route>\r\n    <Route exact path='/BunkerDown' component={BunkerDown}></Route>\r\n    <Route exact path='/CharterProject' component={CharterProject}></Route>\r\n    <Route exact path='/DInfinity' component={DInfinity}></Route>\r\n    <Route exact path='/Resume' component={Resume}></Route>\r\n    <Route exact path='/BlackjackAI' component={BlackjackAI}></Route>\r\n  </Switch>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}