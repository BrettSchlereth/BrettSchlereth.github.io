{"ast":null,"code":"var _jsxFileName = \"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\src\\\\components\\\\CharterProject.js\";\nimport React from 'react';\nimport initSqlJs from 'sql.js'; //https://github.com/BrettSchlereth/CharterHW/blob/main/transactionSQL.sqlite?raw=true\n\nclass CharterProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      database: this.loadDataset(),\n      SQLresponse: \"nothing\"\n    };\n  }\n\n  async loadDataset() {\n    const sqlPromise = initSqlJs({\n      locateFile: file => `sql-wasm.wasm`\n    });\n    const dataPromise = fetch(\"transactionSQL.sqlite\").then(res => res.arrayBuffer());\n    const [SQL, buf] = await Promise.all([sqlPromise, dataPromise]); // const db = new SQL.Database(new Uint8Array(buf));\n\n    return new SQL.Database(new Uint8Array(buf)); // this.setState({\n    //   database: new SQL.Database(new Uint8Array(buf))\n    // })\n    // res = db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")\n    // const res = db.exec(\".scheme tablename\")\n    // console.log(\"response: \", db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")[0][\"values\"][0])\n    // this.setState({\n    //   SQLresponse: db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")[0][\"values\"][0][2]\n    // })\n  } //{this.state.database.exec(\"SELECT * FROM transactionData WHERE TransactionID=4\")[0][\"values\"][0][2]}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, \"returned from script again\", this.state.database);\n  }\n\n}\n\nexport default CharterProject;","map":{"version":3,"sources":["G:/GithubWebsite/portfoliowebsite/src/components/CharterProject.js"],"names":["React","initSqlJs","CharterProject","Component","constructor","props","state","database","loadDataset","SQLresponse","sqlPromise","locateFile","file","dataPromise","fetch","then","res","arrayBuffer","SQL","buf","Promise","all","Database","Uint8Array","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,QAAtB,C,CAGA;;AAEA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AAE3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAE,KAAKC,WAAL,EADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAX;AAID;;AAED,QAAMD,WAAN,GAAqB;AACnB,UAAME,UAAU,GAAGT,SAAS,CAAC;AAACU,MAAAA,UAAU,EAAEC,IAAI,IAAK;AAAtB,KAAD,CAA5B;AACA,UAAMC,WAAW,GAAGC,KAAK,CAAC,uBAAD,CAAL,CAA+BC,IAA/B,CAAoCC,GAAG,IAAIA,GAAG,CAACC,WAAJ,EAA3C,CAApB;AACA,UAAM,CAACC,GAAD,EAAMC,GAAN,IAAa,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACX,UAAD,EAAaG,WAAb,CAAZ,CAAzB,CAHmB,CAInB;;AACA,WAAO,IAAIK,GAAG,CAACI,QAAR,CAAiB,IAAIC,UAAJ,CAAeJ,GAAf,CAAjB,CAAP,CALmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA1B0C,CA2B7C;;;AAEEK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEG,KAAKlB,KAAL,CAAWC,QAFd,CADF;AAKD;;AAnC0C;;AAsC7C,eAAeL,cAAf","sourcesContent":["import React from 'react';\r\nimport initSqlJs from 'sql.js';\r\n\r\n\r\n//https://github.com/BrettSchlereth/CharterHW/blob/main/transactionSQL.sqlite?raw=true\r\n\r\nclass CharterProject extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state={\r\n      database: this.loadDataset(),\r\n      SQLresponse: \"nothing\"\r\n    }\r\n  };\r\n\r\n  async loadDataset () {\r\n    const sqlPromise = initSqlJs({locateFile: file => `sql-wasm.wasm`});\r\n    const dataPromise = fetch(\"transactionSQL.sqlite\").then(res => res.arrayBuffer());\r\n    const [SQL, buf] = await Promise.all([sqlPromise, dataPromise])\r\n    // const db = new SQL.Database(new Uint8Array(buf));\r\n    return new SQL.Database(new Uint8Array(buf));\r\n    // this.setState({\r\n    //   database: new SQL.Database(new Uint8Array(buf))\r\n    // })\r\n    // res = db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")\r\n    // const res = db.exec(\".scheme tablename\")\r\n    // console.log(\"response: \", db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")[0][\"values\"][0])\r\n    // this.setState({\r\n    //   SQLresponse: db.exec(\"SELECT * FROM transactionData WHERE TransactionId=4\")[0][\"values\"][0][2]\r\n    // })\r\n  }\r\n//{this.state.database.exec(\"SELECT * FROM transactionData WHERE TransactionID=4\")[0][\"values\"][0][2]}\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        returned from script again\r\n        {this.state.database}\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default CharterProject;\r\n"]},"metadata":{},"sourceType":"module"}