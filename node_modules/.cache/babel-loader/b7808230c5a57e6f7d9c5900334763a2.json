{"ast":null,"code":"import _regeneratorRuntime from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _inherits from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _classCallCheck from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import React from'react';import{useState,setState}from'react';import'../App.css';import{Box,Image}from'rebass';import CardsDisplay from'./CardsDisplay.js';import twoOfSpades from'../images/2ofSpades.png';import threeOfSpades from'../images/3ofSpades.png';import fourOfSpades from'../images/4ofSpades.png';import fiveOfSpades from'../images/5ofSpades.png';import sixOfSpades from'../images/6ofSpades.png';import sevenOfSpades from'../images/7ofSpades.png';import eightOfSpades from'../images/8ofSpades.png';import nineOfSpades from'../images/9ofSpades.png';import tenOfSpades from'../images/10ofSpades.png';import aceOfSpades from'../images/aceOfSpades.png';import*as tf from'@tensorflow/tfjs';import modelLocation from'../BrettJackModel.json';var cardStyle={height:'auto',maxWidth:'20%'};var cardValues={2:twoOfSpades,3:threeOfSpades,4:fourOfSpades,5:fiveOfSpades,6:sixOfSpades,7:sevenOfSpades,8:eightOfSpades,9:nineOfSpades,10:tenOfSpades,11:aceOfSpades};var Hand=/*#__PURE__*/function(){function Hand(handOwner){_classCallCheck(this,Hand);this.owner=handOwner;this.cards=[];this.soft=0;this.blackjack=false;this.count=0;this.total=0;this.busted=false;}_createClass(Hand,[{key:\"addCard\",value:function addCard(deck){this.cards.push(deck.pop());this.getTotalCardValue();}},{key:\"getTotalCardValue\",value:function getTotalCardValue(){var _this=this;var total=0;var handCount=0;this.cards.forEach(function(card){if(card<=6){handCount+=1;}else if(card>=10){handCount-=1;}_this.count=handCount;if(card==11&&total+card>21){card=1;}else if(card==11&&_this.soft==0){_this.soft=1;}else if(total+card>21&&_this.soft==1){total-=10;_this.soft=0;}total+=card;});this.total=total;if(total>21){this.busted=true;}else{this.busted=false;}}}]);return Hand;}();var gameStyle={background:'brown',align:'center',display:'flex'};var playerSideStyle={width:'50%'};var aiSideStyle={height:'100%',width:'50%'};var dealerStyle={height:'auto',maxHeight:'25em',background:'blue'};var playerStyle={background:'green'};var aiStyle={background:'gray'};var gameButtons={margin:'auto',width:'100%',align:'center'};var gameButton={textAlign:'center',height:'10%',width:'50%'};var deck;var aiDeck;var dealerHand=new Hand(\"dealer\");var playerHand=new Hand(\"player\");var aiDealerHand=new Hand(\"dealer\");var aiPlayerHand=new Hand(\"player\");var BlackjackGame=/*#__PURE__*/function(_React$Component){_inherits(BlackjackGame,_React$Component);var _super=_createSuper(BlackjackGame);function BlackjackGame(props){var _this2;_classCallCheck(this,BlackjackGame);_this2=_super.call(this,props);_this2.loadTheModel();_this2.startGame();_this2.state={playerHand:[],dealerHand:[],aiHand:[],hitDisabled:false,stayDisabled:false,restartDisabled:true,playerDone:false,dealerDone:false,message:\"hit or stay\",aiMessage:\"\"};return _this2;}_createClass(BlackjackGame,[{key:\"checkForBlackjack\",value:function checkForBlackjack(dealer,player){if(dealer.total==21&&player.total==21){this.setState({message:\"Push!\"});return true;}else if(dealer.total==21){this.setState({message:\"Dealer has blackjack!\"});return true;}else if(player.total==21){this.setState({message:\"Player has blackjack!\"});return true;}else return false;}},{key:\"getCards\",value:function getCards(hand,playerType){var cards=[];for(var i=0;i<hand.cards.length;i++){var card=hand.cards[i];cards.push(getCard(card,i));if(playerType===\"dealer\"&this.state.playerDone==false){i=hand.cards.length;}}return cards;}},{key:\"getDealerMoves\",value:function getDealerMoves(){console.log(\"starting dealer moves\");while(dealerHand.total<17){this.hit(\"dealer\");}this.getWinner(dealerHand,playerHand);this.setState({restartDisabled:false});}},{key:\"getWinner\",value:function getWinner(dealer,player){var winnerMessage=\"\";console.log(\"dealerTotal:\",dealer.total);if(dealer.busted){winnerMessage=\"Dealer Busted! Player Wins!\";}else if(dealer.total>player.total){winnerMessage=\"Dealer Wins!\";}else if(player.total>dealer.total){winnerMessage=\"Player Wins!\";}else{winnerMessage=\"Push!\";}this.setState({message:winnerMessage});}},{key:\"hit\",value:function hit(handOwner){switch(handOwner){case\"player\":this.setState({playerHand:playerHand.addCard(deck)});if(playerHand.busted){console.log(\"bust\");this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false,playerDone:true,dealerDone:true,message:\"Player busted! Dealer Wins!\"});}break;case\"dealer\":this.setState({dealerHand:dealerHand.addCard(deck)});if(dealerHand.busted){this.setState({dealerDone:true,message:\"Dealer Busted! Player Wins!\"});}else if(dealerHand.total>=17&&dealerHand.total<=21){this.setState({dealerDone:true,restartDisabled:false});}break;case\"aiPlayer\":break;case\"aiDealer\":break;}}},{key:\"loadTheModel\",value:function(){var _loadTheModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var location,model;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;location=process.env.PUBLIC_URL+modelLocation;_context.next=4;return tf.loadLayersModel('https://github.com/BrettSchlereth/BrettSchlereth.github.io/blob/b9574e7023ca8d6fbef4d27e360c4fd4035bef83/public/BrettJackModel.json');case 4:model=_context.sent;model.summary();console.log(\"model: \",model);_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);console.log(\"failed load model\");case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));function loadTheModel(){return _loadTheModel.apply(this,arguments);}return loadTheModel;}()},{key:\"startGame\",value:function startGame(){this.setState({playerHand:[],dealerHand:[],playerDone:false,dealerDone:false,hitDisabled:false,stayDisabled:false,restartDisabled:true,message:\"hit or stay\"});buildDeck();dealCards();if(this.checkForBlackjack(dealerHand,playerHand)==true){this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false});}else{//get player moves until stay or bust\n//get dealer moves\n//let the ai play\n//let the ai's dealer play\n//add scores\n//clear on restart\n}console.log('start');}},{key:\"stay\",value:function stay(){this.setState({hitDisabled:true,stayDisabled:true,playerDone:true});this.getDealerMoves();}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(Box,{style:gameStyle},/*#__PURE__*/React.createElement(Box,{style:playerSideStyle},/*#__PURE__*/React.createElement(Box,null,this.state.message),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},\"Dealer\",this.getCards(dealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,{style:playerStyle},\"Player\",this.getCards(playerHand,\"player\"),/*#__PURE__*/React.createElement(\"div\",{style:gameButtons},/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.hitDisabled,onClick:function onClick(){return _this3.hit(\"player\");},style:gameButton},\"HIT\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.stayDisabled,onClick:function onClick(){return _this3.stay();},style:gameButton},\"STAY\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.restartDisabled,onClick:function onClick(){return _this3.startGame();},style:gameButton},\"PLAY AGAIN\")))),/*#__PURE__*/React.createElement(Box,{style:aiSideStyle},/*#__PURE__*/React.createElement(Box,null,this.state.aiMessage),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},\"AI Dealer\",this.getCards(aiDealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,{style:aiStyle},\"AI Player\",this.getCards(aiPlayerHand,\"aiPlayer\"))));}}]);return BlackjackGame;}(React.Component);function buildDeck(){deck=[];for(var i=0;i<8;i++){for(var j=2;j<12;j++){if(j===10){deck.push(j);deck.push(j);deck.push(j);}deck.push(j);}}shuffle(deck);aiDeck=deck;console.log(\"building deck\");}function dealCards(){playerHand.cards=[];dealerHand.cards=[];aiPlayerHand.cards=[];aiDealerHand.cards=[];for(var i=0;i<2;i++){playerHand.addCard(deck);dealerHand.addCard(deck);}aiPlayerHand.cards=playerHand.cards.slice();aiDealerHand.cards=dealerHand.cards.slice();console.log(\"dealing cards\");}function getCard(card,index){return/*#__PURE__*/React.createElement(Image,{key:index.toString(),style:cardStyle,src:cardValues[card]});}function shuffle(array){var currentIndex=array.length,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;// And swap it with the current element.\nvar _ref=[array[randomIndex],array[currentIndex]];array[currentIndex]=_ref[0];array[randomIndex]=_ref[1];}return array;}export default BlackjackGame;","map":{"version":3,"sources":["G:/GithubWebsite/portfoliowebsite/src/components/BlackjackGame.js"],"names":["React","useState","setState","Box","Image","CardsDisplay","twoOfSpades","threeOfSpades","fourOfSpades","fiveOfSpades","sixOfSpades","sevenOfSpades","eightOfSpades","nineOfSpades","tenOfSpades","aceOfSpades","tf","modelLocation","cardStyle","height","maxWidth","cardValues","Hand","handOwner","owner","cards","soft","blackjack","count","total","busted","deck","push","pop","getTotalCardValue","handCount","forEach","card","gameStyle","background","align","display","playerSideStyle","width","aiSideStyle","dealerStyle","maxHeight","playerStyle","aiStyle","gameButtons","margin","gameButton","textAlign","aiDeck","dealerHand","playerHand","aiDealerHand","aiPlayerHand","BlackjackGame","props","loadTheModel","startGame","state","aiHand","hitDisabled","stayDisabled","restartDisabled","playerDone","dealerDone","message","aiMessage","dealer","player","hand","playerType","i","length","getCard","console","log","hit","getWinner","winnerMessage","addCard","location","process","env","PUBLIC_URL","loadLayersModel","model","summary","buildDeck","dealCards","checkForBlackjack","getDealerMoves","getCards","stay","Component","j","shuffle","slice","index","toString","array","currentIndex","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, setState } from 'react';\r\nimport '../App.css';\r\nimport { Box, Image } from 'rebass'\r\nimport CardsDisplay from './CardsDisplay.js'\r\nimport twoOfSpades from '../images/2ofSpades.png'\r\nimport threeOfSpades from '../images/3ofSpades.png'\r\nimport fourOfSpades from '../images/4ofSpades.png'\r\nimport fiveOfSpades from '../images/5ofSpades.png'\r\nimport sixOfSpades from '../images/6ofSpades.png'\r\nimport sevenOfSpades from '../images/7ofSpades.png'\r\nimport eightOfSpades from '../images/8ofSpades.png'\r\nimport nineOfSpades from '../images/9ofSpades.png'\r\nimport tenOfSpades from '../images/10ofSpades.png'\r\nimport aceOfSpades from '../images/aceOfSpades.png'\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport modelLocation from '../BrettJackModel.json'\r\n\r\nconst cardStyle = {\r\n  height: 'auto',\r\n  maxWidth: '20%',\r\n}\r\n\r\nconst cardValues = {\r\n  2: twoOfSpades,\r\n  3: threeOfSpades,\r\n  4: fourOfSpades,\r\n  5: fiveOfSpades,\r\n  6: sixOfSpades,\r\n  7: sevenOfSpades,\r\n  8: eightOfSpades,\r\n  9: nineOfSpades,\r\n  10: tenOfSpades,\r\n  11: aceOfSpades\r\n}\r\n\r\nclass Hand {\r\n  constructor(handOwner) {\r\n    this.owner = handOwner;\r\n    this.cards = [];\r\n    this.soft = 0;\r\n    this.blackjack = false;\r\n    this.count = 0;\r\n    this.total = 0;\r\n    this.busted = false;\r\n  }\r\n\r\n  addCard(deck) {\r\n    this.cards.push(deck.pop())\r\n    this.getTotalCardValue()\r\n  }\r\n\r\n  getTotalCardValue() {\r\n    var total = 0\r\n    var handCount = 0\r\n    this.cards.forEach(card => {\r\n      if (card <= 6) {\r\n        handCount += 1\r\n      }\r\n      else if (card >= 10) {\r\n        handCount -= 1\r\n      }\r\n      this.count = handCount\r\n      if (card == 11 && total + card > 21) {\r\n        card = 1\r\n      }\r\n      else if (card == 11 && this.soft == 0) {\r\n        this.soft = 1\r\n      }\r\n      else if (total + card > 21 && this.soft == 1) {\r\n        total -= 10\r\n        this.soft = 0\r\n      }\r\n      total += card\r\n    });\r\n\r\n    this.total = total\r\n    if (total > 21) {\r\n      this.busted = true;\r\n    }\r\n    else {\r\n      this.busted = false;\r\n    }\r\n  }\r\n}\r\n\r\nconst gameStyle = {\r\n  background: 'brown',\r\n  align: 'center',\r\n  display: 'flex'\r\n}\r\n\r\nconst playerSideStyle = {\r\n  width: '50%',\r\n}\r\n\r\nconst aiSideStyle = {\r\n  height: '100%',\r\n  width: '50%',\r\n}\r\n\r\nconst dealerStyle = {\r\n  height: 'auto',\r\n  maxHeight: '25em',\r\n  background: 'blue',\r\n}\r\n\r\nconst playerStyle = {\r\n  background: 'green',\r\n}\r\n\r\nconst aiStyle = {\r\n  background: 'gray',\r\n}\r\n\r\nconst gameButtons = {\r\n  margin: 'auto',\r\n  width: '100%',\r\n  align: 'center',\r\n}\r\n\r\nconst gameButton = {\r\n  textAlign: 'center',\r\n  height: '10%',\r\n  width: '50%'\r\n}\r\n\r\nvar deck;\r\nvar aiDeck;\r\nvar dealerHand = new Hand(\"dealer\");\r\nvar playerHand = new Hand(\"player\");\r\nvar aiDealerHand = new Hand(\"dealer\");\r\nvar aiPlayerHand = new Hand(\"player\");\r\n\r\n\r\nclass BlackjackGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.loadTheModel()\r\n    this.startGame();\r\n    this.state = {\r\n      playerHand : [],\r\n      dealerHand: [],\r\n      aiHand: [],\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      message: \"hit or stay\",\r\n      aiMessage: \"\",\r\n    }\r\n\r\n  }\r\n\r\n  checkForBlackjack(dealer, player) {\r\n    if (dealer.total == 21 && player.total == 21) {\r\n      this.setState({\r\n        message: \"Push!\",\r\n      });\r\n      return true;\r\n    }\r\n    else if (dealer.total == 21) {\r\n      this.setState({\r\n        message: \"Dealer has blackjack!\"\r\n      })\r\n      return true\r\n    }\r\n    else if (player.total == 21) {\r\n      this.setState({\r\n        message: \"Player has blackjack!\"\r\n      })\r\n      return true\r\n    }\r\n    else return false\r\n    }\r\n\r\n  getCards(hand, playerType) {\r\n    var cards = []\r\n    for (var i=0; i<hand.cards.length; i++) {\r\n        var card = hand.cards[i]\r\n        cards.push(getCard(card, i))\r\n        if (playerType === \"dealer\" & this.state.playerDone == false) {\r\n          i = hand.cards.length\r\n        }\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  getDealerMoves() {\r\n    console.log(\"starting dealer moves\")\r\n    while (dealerHand.total < 17) {\r\n      this.hit(\"dealer\")\r\n    }\r\n    this.getWinner(dealerHand, playerHand)\r\n    this.setState({\r\n      restartDisabled: false\r\n    })\r\n  }\r\n\r\n  getWinner(dealer, player) {\r\n    var winnerMessage = \"\"\r\n    console.log(\"dealerTotal:\", dealer.total)\r\n    if (dealer.busted) {\r\n      winnerMessage = \"Dealer Busted! Player Wins!\"\r\n    }\r\n    else if (dealer.total > player.total) {\r\n      winnerMessage = \"Dealer Wins!\"\r\n    }\r\n    else if (player.total > dealer.total) {\r\n      winnerMessage = \"Player Wins!\"\r\n    }\r\n    else {winnerMessage = \"Push!\"}\r\n    this.setState({\r\n      message: winnerMessage\r\n    })\r\n  }\r\n\r\n  hit(handOwner) {\r\n   switch (handOwner) {\r\n     case \"player\":\r\n       this.setState({\r\n         playerHand: playerHand.addCard(deck)\r\n       })\r\n       if (playerHand.busted) {\r\n         console.log(\"bust\");\r\n         this.setState({\r\n         hitDisabled: true,\r\n         stayDisabled: true,\r\n         restartDisabled: false,\r\n         playerDone: true,\r\n         dealerDone: true,\r\n         message: \"Player busted! Dealer Wins!\"\r\n       })\r\n       }\r\n       break;\r\n     case \"dealer\":\r\n        this.setState({\r\n          dealerHand: dealerHand.addCard(deck)\r\n        })\r\n        if (dealerHand.busted) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            message: \"Dealer Busted! Player Wins!\"\r\n          })\r\n        }\r\n        else if (dealerHand.total >= 17 && dealerHand.total <= 21) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            restartDisabled: false,\r\n          })\r\n        }\r\n        break;\r\n     case \"aiPlayer\":\r\n        break;\r\n     case \"aiDealer\":\r\n        break;\r\n      }\r\n  }\r\n\r\n  async loadTheModel () {\r\n    try {\r\n      var location = process.env.PUBLIC_URL + modelLocation\r\n\r\n      const model = await tf.loadLayersModel('https://github.com/BrettSchlereth/BrettSchlereth.github.io/blob/b9574e7023ca8d6fbef4d27e360c4fd4035bef83/public/BrettJackModel.json');\r\n      model.summary();\r\n      console.log(\"model: \", model)\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"failed load model\");\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.setState({\r\n      playerHand: [],\r\n      dealerHand: [],\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      message: \"hit or stay\",\r\n    })\r\n    buildDeck()\r\n    dealCards()\r\n    if (this.checkForBlackjack(dealerHand, playerHand) == true) {\r\n      this.setState({\r\n        hitDisabled: true,\r\n        stayDisabled: true,\r\n        restartDisabled: false\r\n      })\r\n    }\r\n    else {\r\n      //get player moves until stay or bust\r\n      //get dealer moves\r\n      //let the ai play\r\n      //let the ai's dealer play\r\n      //add scores\r\n      //clear on restart\r\n    }\r\n\r\n    console.log('start')\r\n  }\r\n\r\n  stay() {\r\n    this.setState({\r\n      hitDisabled: true,\r\n      stayDisabled: true,\r\n      playerDone: true,\r\n    })\r\n    this.getDealerMoves()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box style={gameStyle}>\r\n        <Box style={playerSideStyle}>\r\n          <Box>\r\n            {this.state.message}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            Dealer\r\n            {this.getCards(dealerHand, \"dealer\")}\r\n          </Box>\r\n        <Box style={playerStyle}>\r\n          Player\r\n          {this.getCards(playerHand, \"player\")}\r\n          <div style={gameButtons}>\r\n            <button disabled={this.state.hitDisabled} onClick={() => this.hit(\"player\")} style={gameButton}>HIT</button>\r\n            <button disabled={this.state.stayDisabled} onClick={() => this.stay()} style={gameButton}>STAY</button>\r\n            <button disabled={this.state.restartDisabled} onClick={() => this.startGame()} style={gameButton}>PLAY AGAIN</button>\r\n          </div>\r\n          </Box>\r\n        </Box>\r\n        <Box style={aiSideStyle}>\r\n          <Box>\r\n            {this.state.aiMessage}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            AI Dealer\r\n            {this.getCards(aiDealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box style={aiStyle}>\r\n            AI Player\r\n            {this.getCards(aiPlayerHand, \"aiPlayer\")}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDeck() {\r\n  deck = []\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 2; j < 12; j++) {\r\n      if (j === 10) {\r\n        deck.push(j)\r\n        deck.push(j)\r\n        deck.push(j)\r\n      }\r\n      deck.push(j)\r\n    }\r\n  }\r\n  shuffle(deck)\r\n  aiDeck = deck\r\n  console.log(\"building deck\")\r\n}\r\n\r\nfunction dealCards() {\r\n  playerHand.cards = [];\r\n  dealerHand.cards = [];\r\n  aiPlayerHand.cards = [];\r\n  aiDealerHand.cards = [];\r\n  for (var i = 0; i < 2; i++) {\r\n    playerHand.addCard(deck)\r\n    dealerHand.addCard(deck)\r\n  }\r\n  aiPlayerHand.cards = playerHand.cards.slice()\r\n  aiDealerHand.cards = dealerHand.cards.slice()\r\n  console.log(\"dealing cards\")\r\n}\r\n\r\nfunction getCard(card, index) {\r\n  return (\r\n    <Image key={index.toString()} style={cardStyle} src={cardValues[card]}/>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default BlackjackGame;\r\n"]},"metadata":{},"sourceType":"module"}