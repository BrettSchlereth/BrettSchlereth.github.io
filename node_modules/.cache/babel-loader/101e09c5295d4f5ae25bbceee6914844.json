{"ast":null,"code":"import _regeneratorRuntime from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _inherits from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _classCallCheck from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import React from'react';//import { setState } from 'react'\nimport'../App.css';import{Box,Image}from'rebass';import twoOfSpades from'../images/2ofSpades.png';import threeOfSpades from'../images/3ofSpades.png';import fourOfSpades from'../images/4ofSpades.png';import fiveOfSpades from'../images/5ofSpades.png';import sixOfSpades from'../images/6ofSpades.png';import sevenOfSpades from'../images/7ofSpades.png';import eightOfSpades from'../images/8ofSpades.png';import nineOfSpades from'../images/9ofSpades.png';import tenOfSpades from'../images/10ofSpades.png';import aceOfSpades from'../images/aceOfSpades.png';import*as tf from'@tensorflow/tfjs';var cardStyle={height:'auto',maxWidth:'20%'};var cardValues={2:twoOfSpades,3:threeOfSpades,4:fourOfSpades,5:fiveOfSpades,6:sixOfSpades,7:sevenOfSpades,8:eightOfSpades,9:nineOfSpades,10:tenOfSpades,11:aceOfSpades};var Hand=/*#__PURE__*/function(){function Hand(handOwner){var ai=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;_classCallCheck(this,Hand);this.owner=handOwner;this.isAi=ai;this.cards=[];this.soft=0;this.blackjack=false;this.count=0;this.total=this.getTotalCardValue();this.busted=false;}_createClass(Hand,[{key:\"addCard\",value:function addCard(deck){this.cards.push(deck.pop());this.getTotalCardValue();}},{key:\"getTotalCardValue\",value:function getTotalCardValue(){var _this=this;var total=0;var handCount=0;this.cards.forEach(function(card){if(card<=6){handCount+=1;}else if(card>=10){handCount-=1;}_this.count=handCount;if(card===11&&total+card>21){card=1;}else if(card===11&&_this.soft===0){_this.soft=1;}else if(total+card>21&&_this.soft===1){total-=10;_this.soft=0;}total+=card;_this.total=total;});this.total=total;if(total>21){console.log(this.owner,\"busted!\");this.busted=true;}else{this.busted=false;}return total;}}]);return Hand;}();var gameStyle={background:'green',align:'center',display:'flex',borderRadius:'5px',border:'1px solid black'};var messageStyle={background:'DarkGreen',textAlign:'center',borderRadius:'20px, 20px, 20px, 20px'};var playerSideStyle={width:'50%',borderRadius:'5px'};var aiSideStyle={height:'100%',width:'50%'};var dealerStyle={height:'auto',maxHeight:'25em',borderRadius:'5px'};var playerStyle={background:'green',borderRadius:'5px'};var aiStyle={background:'green'};var gameButtons={margin:'auto',width:'100%',align:'center'};var gameButtonStyles={false:{textAlign:'center',height:'10%',width:'50%',backgroundColor:\"white\",color:\"black\",fontSize:\"1.5em\",borderRadius:'5px',border:'1px solid black'},true:{textAlign:'center',height:'10%',width:'50%',backgroundColor:\"gray\",color:\"black\",fontSize:\"1.5em\",borderRadius:'5px',border:'1px solid black'}};var scoreStyle={textAlign:'center'};var deck;var aiDeck;var dealerHand=new Hand(\"dealer\");var playerHand=new Hand(\"player\");var aiDealerHand=new Hand(\"aiDealer\");var aiPlayerHand=new Hand(\"player\",true);var model;var playerStats={\"win\":0,\"push\":0,\"loss\":0};var aiStats={\"win\":0,\"push\":0,\"loss\":0};var totalGames=0;var BlackjackGame=/*#__PURE__*/function(_React$Component){_inherits(BlackjackGame,_React$Component);var _super=_createSuper(BlackjackGame);function BlackjackGame(props){var _this2;_classCallCheck(this,BlackjackGame);_this2=_super.call(this,props);model=_this2.loadTheModel().then(function(result){return result;}).catch(console.log(\"failure\"));console.log(\"model: \",model);_this2.startGame();_this2.state={playerHand:[],dealerHand:[],aiHand:[],aiDealerHand:[],hitDisabled:false,stayDisabled:false,restartDisabled:true,playerDone:false,dealerDone:false,aiPlayerDone:false,message:\"Hit Or Stay\",aiMessage:\"AI Is Waiting\",playerWinPercentage:0,playerPushPercentage:0,playerLossPercentage:0,aiWinPercentage:0,aiPushPercentage:0,aiLossPercentage:0};return _this2;}_createClass(BlackjackGame,[{key:\"checkForBlackjack\",value:function checkForBlackjack(dealer,player){if(dealer.total===21&&player.total===21){this.setState({message:\"Push!\"});this.setStats(\"push\",player.isAi);return true;}else if(dealer.total===21){this.setState({message:\"Dealer has blackjack!\"});this.setStats(\"loss\",true);this.setStats(\"loss\",false);return true;}else if(player.total===21){this.setState({message:\"Player has blackjack!\"});this.setStats(\"win\",true);this.setStats(\"win\",false);return true;}else return false;}},{key:\"displayDealerTotal\",value:function displayDealerTotal(){var dealerType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"human\";if(dealerHand.cards.length===2){return dealerHand.cards[0];}if(dealerType===\"ai\"){return aiDealerHand.getTotalCardValue();}return dealerHand.getTotalCardValue();}},{key:\"getAiDealerMoves\",value:function(){var _getAiDealerMoves=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"starting dealer moves\");console.log(\"dealer total\",aiDealerHand.getTotalCardValue());while(aiDealerHand.getTotalCardValue()<17){console.log(\"aiDealer is hitting\");this.hit(\"aiDealer\");}this.getWinner(aiDealerHand,aiPlayerHand);case 4:case\"end\":return _context.stop();}}},_callee,this);}));function getAiDealerMoves(){return _getAiDealerMoves.apply(this,arguments);}return getAiDealerMoves;}()},{key:\"getAiMoves\",value:function(){var _getAiMoves=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var predictions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(aiPlayerHand.busted===false)){_context2.next=14;break;}_context2.next=3;return this.getPrediction();case 3:predictions=_context2.sent;console.log(\"predictions: \",predictions);if(!(predictions[0]>=predictions[1]&&predictions[0]>0.5)){_context2.next=10;break;}console.log(\"ai is hitting\");this.hit(\"aiPlayer\");_context2.next=12;break;case 10:console.log(\"ai is holding\");return _context2.abrupt(\"break\",14);case 12:_context2.next=0;break;case 14:this.getAiDealerMoves(aiDealerHand,aiPlayerHand);case 15:case\"end\":return _context2.stop();}}},_callee2,this);}));function getAiMoves(){return _getAiMoves.apply(this,arguments);}return getAiMoves;}()},{key:\"getCards\",value:function getCards(hand,playerType){var cards=[];for(var i=0;i<hand.cards.length;i++){var card=hand.cards[i];cards.push(getCard(card,i));if(playerType===\"dealer\"&this.state.playerDone===false){i=hand.cards.length;}}return cards;}},{key:\"getCount\",value:function getCount(hand1,hand2){return hand1.count+hand2.count;}},{key:\"getDealerMoves\",value:function getDealerMoves(dealer,player){while(dealer.getTotalCardValue()<17){if(dealer.owner===\"dealer\"){this.hit(\"dealer\");}else{this.hit(\"aiDealer\");}}this.getWinner(dealer,player);this.getAiMoves();this.setState({restartDisabled:false});}},{key:\"getPercentage\",value:function getPercentage(){var playerType=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"human\";var endType=arguments.length>1?arguments[1]:undefined;if(playerType===\"ai\"){return Math.floor(100*(aiStats[endType]/(totalGames+1)));}return Math.floor(100*(playerStats[endType]/(totalGames+1)));}},{key:\"getPrediction\",value:function(){var _getPrediction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var hitPredictionInput,stayPredictionInput,hitPrediction,stayPrediction;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return tf.loadLayersModel('model.json');case 2:model=_context3.sent;hitPredictionInput=tf.tensor([[aiDealerHand.cards[0],aiPlayerHand.getTotalCardValue(),this.getCount(aiDealerHand,aiPlayerHand),aiPlayerHand.soft,1]]);stayPredictionInput=tf.tensor([[aiDealerHand.cards[0],aiPlayerHand.getTotalCardValue(),this.getCount(aiDealerHand,aiPlayerHand),aiPlayerHand.soft,0]]);hitPrediction=model.predict(hitPredictionInput).dataSync()[0];stayPrediction=model.predict(stayPredictionInput).dataSync()[0];console.log(\"hit: \",hitPrediction,\" stay: \",stayPrediction);return _context3.abrupt(\"return\",[hitPrediction,stayPrediction]);case 9:case\"end\":return _context3.stop();}}},_callee3,this);}));function getPrediction(){return _getPrediction.apply(this,arguments);}return getPrediction;}()},{key:\"getWinner\",value:function getWinner(dealer,player){var winnerMessage=\"\";if(player.total>21){winnerMessage=\"Player Busted! Dealer Wins!\";this.setStats(\"loss\",player.isAi);}else if(dealer.busted){winnerMessage=\"Dealer Busted! Player Wins!\";this.setStats(\"win\",player.isAi);}else if(dealer.total>player.total){winnerMessage=\"Dealer Wins!\";this.setStats(\"loss\",player.isAi);}else if(player.total>dealer.total){winnerMessage=\"Player Wins!\";this.setStats(\"win\",player.isAi);}else{winnerMessage=\"Push!\";this.setStats(\"push\",player.isAi);}if(dealer.owner===\"dealer\"){this.setState({message:winnerMessage});}else{this.setState({aiMessage:winnerMessage});}}},{key:\"hit\",value:function hit(handOwner){switch(handOwner){case\"player\":this.setState({playerHand:playerHand.addCard(deck)});if(playerHand.busted){console.log(\"bust\");this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false,playerDone:true,dealerDone:true,message:\"Player busted! Dealer Wins!\"});this.getDealerMoves(dealerHand,playerHand);}break;case\"dealer\":this.setState({dealerHand:dealerHand.addCard(deck)});if(dealerHand.busted){this.setState({dealerDone:true,message:\"Dealer Busted! Player Wins!\"});}else if(dealerHand.total>=17&&dealerHand.total<=21){this.setState({dealerDone:true,restartDisabled:false});}break;case\"aiPlayer\":this.setState({aiPlayerHand:aiPlayerHand.addCard(aiDeck)});if(aiPlayerHand.busted){this.setState({aiPlayerDone:true,aiMessage:\"AI Busted! AI Dealer Wins!\"});}break;case\"aiDealer\":this.setState({aiDealerHand:aiDealerHand.addCard(aiDeck)});if(aiDealerHand.busted){this.setState({dealerDone:true,aiMessage:\"Dealer Busted! Player Wins!\"});}else if(aiDealerHand.total>=17&&aiDealerHand.total<=21){this.setState({dealerDone:true,restartDisabled:false});}break;default:console.log(\"Error: Player type not recognized\");break;}}},{key:\"loadTheModel\",value:function(){var _loadTheModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var model;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return tf.loadLayersModel('model.json');case 3:model=_context4.sent;return _context4.abrupt(\"return\",model);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);console.log(\"failed load model\");case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));function loadTheModel(){return _loadTheModel.apply(this,arguments);}return loadTheModel;}()},{key:\"setStats\",value:function setStats(endType,isAi){if(isAi===true){aiStats[endType]+=1;}else{playerStats[endType]+=1;}this.setState({playerWinPercentage:this.getPercentage(\"human\",\"win\"),playerPushPercentage:this.getPercentage(\"human\",\"push\"),aiWinPercentage:this.getPercentage(\"ai\",\"win\"),aiPushPercentage:this.getPercentage(\"ai\",\"push\"),playerLossPercentage:100-this.getPercentage(\"human\",\"win\")-this.getPercentage(\"human\",\"push\"),aiLossPercentage:100-this.getPercentage(\"ai\",\"win\")-this.getPercentage(\"ai\",\"push\")});console.log(\"playerStats: \",playerStats,\" totalGames: \",totalGames);console.log(\"aiStats: \",aiStats,\" totalGames: \",totalGames);}},{key:\"startGame\",value:function startGame(){totalGames+=1;this.setState({playerHand:[],dealerHand:[],playerDone:false,dealerDone:false,hitDisabled:false,stayDisabled:false,restartDisabled:true,message:\"hit or stay\",aiMessage:\"AI Side\"});buildDeck();dealCards();if(this.checkForBlackjack(dealerHand,playerHand)===true){this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false});}console.log('start');}},{key:\"stay\",value:function stay(hand){switch(hand.owner){case\"player\":this.setState({hitDisabled:true,stayDisabled:true,playerDone:true});this.getDealerMoves(dealerHand,playerHand);case\"aiPlayer\":console.log(\"aiPlayer stayed\");default:console.log(\"unknown player stayed\");}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Box,{style:scoreStyle},\"Total Games: \",totalGames),/*#__PURE__*/React.createElement(Box,{style:scoreStyle},\"Player Wins: \",this.state.playerWinPercentage,\"% AI Wins: \",this.state.aiWinPercentage,\"%\"),/*#__PURE__*/React.createElement(Box,{style:scoreStyle},\"Player Pushes: \",this.state.playerPushPercentage,\"% AI Pushes: \",this.state.aiPushPercentage,\"%\"),/*#__PURE__*/React.createElement(Box,{style:scoreStyle},\"Player Losses: \",this.state.playerLossPercentage,\"% AI Loss: \",this.state.aiLossPercentage,\"%\"),/*#__PURE__*/React.createElement(Box,{style:gameStyle},/*#__PURE__*/React.createElement(Box,{style:playerSideStyle},/*#__PURE__*/React.createElement(Box,{style:messageStyle},this.state.message),/*#__PURE__*/React.createElement(Box,null,\"Dealer: \",this.displayDealerTotal()),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},this.getCards(dealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,null,\"Player: \",playerHand.getTotalCardValue()),/*#__PURE__*/React.createElement(Box,{style:playerStyle},this.getCards(playerHand,\"player\"),/*#__PURE__*/React.createElement(\"div\",{style:gameButtons},/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.hitDisabled,onClick:function onClick(){return _this3.hit(\"player\");},style:gameButtonStyles[this.state.hitDisabled]},\"HIT\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.stayDisabled,onClick:function onClick(){return _this3.stay(playerHand);},style:gameButtonStyles[this.state.stayDisabled]},\"STAY\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.restartDisabled,onClick:function onClick(){return _this3.startGame();},style:gameButtonStyles[this.state.restartDisabled]},\"PLAY AGAIN\")))),/*#__PURE__*/React.createElement(Box,{style:aiSideStyle},/*#__PURE__*/React.createElement(Box,{style:messageStyle},this.state.aiMessage),/*#__PURE__*/React.createElement(Box,null,\"AI Dealer: \",this.displayDealerTotal(\"ai\")),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},this.getCards(aiDealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,null,\"AI Player: \",aiPlayerHand.getTotalCardValue()),/*#__PURE__*/React.createElement(Box,{style:aiStyle},this.getCards(aiPlayerHand,\"aiPlayer\")))));}}]);return BlackjackGame;}(React.Component);function buildDeck(){deck=[];for(var i=0;i<8;i++){for(var j=2;j<12;j++){if(j===10){deck.push(j);deck.push(j);deck.push(j);}deck.push(j);}}shuffle(deck);aiDeck=deck.slice();console.log(\"building deck\");}function dealCards(){playerHand.cards=[];dealerHand.cards=[];aiPlayerHand.cards=[];aiDealerHand.cards=[];for(var i=0;i<2;i++){playerHand.addCard(deck);dealerHand.addCard(deck);aiPlayerHand.addCard(aiDeck);aiDealerHand.addCard(aiDeck);}aiPlayerHand.getTotalCardValue();aiDealerHand.getTotalCardValue();console.log(\"dealing cards\");}function getCard(card,index){return/*#__PURE__*/React.createElement(Image,{key:index.toString(),style:cardStyle,src:cardValues[card]});}function shuffle(array){var currentIndex=array.length,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;// And swap it with the current element.\nvar _ref=[array[randomIndex],array[currentIndex]];array[currentIndex]=_ref[0];array[randomIndex]=_ref[1];}return array;}export default BlackjackGame;","map":{"version":3,"sources":["G:/GithubWebsite/portfoliowebsite/src/components/BlackjackGame.js"],"names":["React","Box","Image","twoOfSpades","threeOfSpades","fourOfSpades","fiveOfSpades","sixOfSpades","sevenOfSpades","eightOfSpades","nineOfSpades","tenOfSpades","aceOfSpades","tf","cardStyle","height","maxWidth","cardValues","Hand","handOwner","ai","owner","isAi","cards","soft","blackjack","count","total","getTotalCardValue","busted","deck","push","pop","handCount","forEach","card","console","log","gameStyle","background","align","display","borderRadius","border","messageStyle","textAlign","playerSideStyle","width","aiSideStyle","dealerStyle","maxHeight","playerStyle","aiStyle","gameButtons","margin","gameButtonStyles","false","backgroundColor","color","fontSize","true","scoreStyle","aiDeck","dealerHand","playerHand","aiDealerHand","aiPlayerHand","model","playerStats","aiStats","totalGames","BlackjackGame","props","loadTheModel","then","result","catch","startGame","state","aiHand","hitDisabled","stayDisabled","restartDisabled","playerDone","dealerDone","aiPlayerDone","message","aiMessage","playerWinPercentage","playerPushPercentage","playerLossPercentage","aiWinPercentage","aiPushPercentage","aiLossPercentage","dealer","player","setState","setStats","dealerType","length","hit","getWinner","getPrediction","predictions","getAiDealerMoves","hand","playerType","i","getCard","hand1","hand2","getAiMoves","endType","Math","floor","loadLayersModel","hitPredictionInput","tensor","getCount","stayPredictionInput","hitPrediction","predict","dataSync","stayPrediction","winnerMessage","addCard","getDealerMoves","getPercentage","buildDeck","dealCards","checkForBlackjack","displayDealerTotal","getCards","stay","Component","j","shuffle","slice","index","toString","array","currentIndex","randomIndex","random"],"mappings":"u6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,MAAO,YAAP,CACA,OAASC,GAAT,CAAcC,KAAd,KAA2B,QAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,0BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAO,GAAKC,CAAAA,EAAZ,KAAoB,kBAApB,CAEA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,MAAM,CAAE,MADQ,CAEhBC,QAAQ,CAAE,KAFM,CAAlB,CAKA,GAAMC,CAAAA,UAAU,CAAG,CACjB,EAAGd,WADc,CAEjB,EAAGC,aAFc,CAGjB,EAAGC,YAHc,CAIjB,EAAGC,YAJc,CAKjB,EAAGC,WALc,CAMjB,EAAGC,aANc,CAOjB,EAAGC,aAPc,CAQjB,EAAGC,YARc,CASjB,GAAIC,WATa,CAUjB,GAAIC,WAVa,CAAnB,C,GAaMM,CAAAA,I,yBACJ,cAAYC,SAAZ,CAAmC,IAAZC,CAAAA,EAAY,2DAAP,KAAO,4BACjC,KAAKC,KAAL,CAAaF,SAAb,CACA,KAAKG,IAAL,CAAYF,EAAZ,CACA,KAAKG,KAAL,CAAa,EAAb,CACA,KAAKC,IAAL,CAAY,CAAZ,CACA,KAAKC,SAAL,CAAiB,KAAjB,CACA,KAAKC,KAAL,CAAa,CAAb,CACA,KAAKC,KAAL,CAAa,KAAKC,iBAAL,EAAb,CACA,KAAKC,MAAL,CAAc,KAAd,CACD,C,yDAEOC,I,CAAM,CACZ,KAAKP,KAAL,CAAWQ,IAAX,CAAgBD,IAAI,CAACE,GAAL,EAAhB,EACA,KAAKJ,iBAAL,GACD,C,6DAEmB,gBAClB,GAAID,CAAAA,KAAK,CAAG,CAAZ,CACA,GAAIM,CAAAA,SAAS,CAAG,CAAhB,CACA,KAAKV,KAAL,CAAWW,OAAX,CAAmB,SAAAC,IAAI,CAAI,CACzB,GAAIA,IAAI,EAAI,CAAZ,CAAe,CACbF,SAAS,EAAI,CAAb,CACD,CAFD,IAGK,IAAIE,IAAI,EAAI,EAAZ,CAAgB,CACnBF,SAAS,EAAI,CAAb,CACD,CACD,KAAI,CAACP,KAAL,CAAaO,SAAb,CACA,GAAIE,IAAI,GAAK,EAAT,EAAeR,KAAK,CAAGQ,IAAR,CAAe,EAAlC,CAAsC,CACpCA,IAAI,CAAG,CAAP,CACD,CAFD,IAGK,IAAIA,IAAI,GAAK,EAAT,EAAe,KAAI,CAACX,IAAL,GAAc,CAAjC,CAAoC,CACvC,KAAI,CAACA,IAAL,CAAY,CAAZ,CACD,CAFI,IAGA,IAAIG,KAAK,CAAGQ,IAAR,CAAe,EAAf,EAAqB,KAAI,CAACX,IAAL,GAAc,CAAvC,CAA0C,CAC7CG,KAAK,EAAI,EAAT,CACA,KAAI,CAACH,IAAL,CAAY,CAAZ,CACD,CACDG,KAAK,EAAIQ,IAAT,CACA,KAAI,CAACR,KAAL,CAAaA,KAAb,CACD,CApBD,EAsBA,KAAKA,KAAL,CAAaA,KAAb,CACA,GAAIA,KAAK,CAAG,EAAZ,CAAgB,CACdS,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAjB,CAAwB,SAAxB,EACA,KAAKQ,MAAL,CAAc,IAAd,CACD,CAHD,IAIK,CACH,KAAKA,MAAL,CAAc,KAAd,CACD,CACD,MAAOF,CAAAA,KAAP,CACD,C,oBAGH,GAAMW,CAAAA,SAAS,CAAG,CAChBC,UAAU,CAAE,OADI,CAEhBC,KAAK,CAAE,QAFS,CAGhBC,OAAO,CAAE,MAHO,CAIhBC,YAAY,CAAE,KAJE,CAKhBC,MAAM,CAAE,iBALQ,CAAlB,CAQA,GAAMC,CAAAA,YAAY,CAAG,CACnBL,UAAU,CAAE,WADO,CAEnBM,SAAS,CAAE,QAFQ,CAGnBH,YAAY,CAAE,wBAHK,CAArB,CAMA,GAAMI,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,KADe,CAEtBL,YAAY,CAAE,KAFQ,CAAxB,CAKA,GAAMM,CAAAA,WAAW,CAAG,CAClBjC,MAAM,CAAE,MADU,CAElBgC,KAAK,CAAE,KAFW,CAApB,CAKA,GAAME,CAAAA,WAAW,CAAG,CAClBlC,MAAM,CAAE,MADU,CAElBmC,SAAS,CAAE,MAFO,CAGlBR,YAAY,CAAE,KAHI,CAApB,CAMA,GAAMS,CAAAA,WAAW,CAAG,CAClBZ,UAAU,CAAE,OADM,CAElBG,YAAY,CAAE,KAFI,CAApB,CAKA,GAAMU,CAAAA,OAAO,CAAG,CACdb,UAAU,CAAE,OADE,CAAhB,CAIA,GAAMc,CAAAA,WAAW,CAAG,CAClBC,MAAM,CAAE,MADU,CAElBP,KAAK,CAAE,MAFW,CAGlBP,KAAK,CAAE,QAHW,CAApB,CAMA,GAAMe,CAAAA,gBAAgB,CAAG,CACvBC,KAAK,CAAE,CACLX,SAAS,CAAE,QADN,CAEL9B,MAAM,CAAE,KAFH,CAGLgC,KAAK,CAAE,KAHF,CAILU,eAAe,CAAE,OAJZ,CAKLC,KAAK,CAAE,OALF,CAMLC,QAAQ,CAAE,OANL,CAOLjB,YAAY,CAAE,KAPT,CAQLC,MAAM,CAAE,iBARH,CADgB,CAWvBiB,IAAI,CAAE,CACJf,SAAS,CAAE,QADP,CAEJ9B,MAAM,CAAE,KAFJ,CAGJgC,KAAK,CAAE,KAHH,CAIJU,eAAe,CAAE,MAJb,CAKJC,KAAK,CAAE,OALH,CAMJC,QAAQ,CAAE,OANN,CAOJjB,YAAY,CAAE,KAPV,CAQJC,MAAM,CAAE,iBARJ,CAXiB,CAAzB,CAuBA,GAAMkB,CAAAA,UAAU,CAAG,CACjBhB,SAAS,CAAE,QADM,CAAnB,CAIA,GAAIf,CAAAA,IAAJ,CACA,GAAIgC,CAAAA,MAAJ,CACA,GAAIC,CAAAA,UAAU,CAAG,GAAI7C,CAAAA,IAAJ,CAAS,QAAT,CAAjB,CACA,GAAI8C,CAAAA,UAAU,CAAG,GAAI9C,CAAAA,IAAJ,CAAS,QAAT,CAAjB,CACA,GAAI+C,CAAAA,YAAY,CAAG,GAAI/C,CAAAA,IAAJ,CAAS,UAAT,CAAnB,CACA,GAAIgD,CAAAA,YAAY,CAAG,GAAIhD,CAAAA,IAAJ,CAAS,QAAT,CAAmB,IAAnB,CAAnB,CACA,GAAIiD,CAAAA,KAAJ,CACA,GAAIC,CAAAA,WAAW,CAAG,CAChB,MAAO,CADS,CAEhB,OAAQ,CAFQ,CAGhB,OAAQ,CAHQ,CAAlB,CAKA,GAAIC,CAAAA,OAAO,CAAG,CACZ,MAAO,CADK,CAEZ,OAAQ,CAFI,CAGZ,OAAQ,CAHI,CAAd,CAKA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,C,GAEMC,CAAAA,a,0HACJ,uBAAYC,KAAZ,CAAmB,gDACjB,wBAAMA,KAAN,EACAL,KAAK,CAAG,OAAKM,YAAL,GACPC,IADO,CACF,SAASC,MAAT,CAAiB,CACrB,MAAOA,CAAAA,MAAP,CACD,CAHO,EAIPC,KAJO,CAIDxC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAJC,CAAR,CAKAD,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuB8B,KAAvB,EACA,OAAKU,SAAL,GACA,OAAKC,KAAL,CAAa,CACXd,UAAU,CAAG,EADF,CAEXD,UAAU,CAAE,EAFD,CAGXgB,MAAM,CAAE,EAHG,CAIXd,YAAY,CAAE,EAJH,CAKXe,WAAW,CAAE,KALF,CAMXC,YAAY,CAAE,KANH,CAOXC,eAAe,CAAE,IAPN,CAQXC,UAAU,CAAE,KARD,CASXC,UAAU,CAAE,KATD,CAUXC,YAAY,CAAE,KAVH,CAWXC,OAAO,CAAE,aAXE,CAYXC,SAAS,CAAE,eAZA,CAaXC,mBAAmB,CAAE,CAbV,CAcXC,oBAAoB,CAAE,CAdX,CAeXC,oBAAoB,CAAE,CAfX,CAgBXC,eAAe,CAAE,CAhBN,CAiBXC,gBAAgB,CAAE,CAjBP,CAkBXC,gBAAgB,CAAE,CAlBP,CAAb,CATiB,cA6BlB,C,sFAEiBC,M,CAAQC,M,CAAQ,CAChC,GAAID,MAAM,CAACnE,KAAP,GAAiB,EAAjB,EAAuBoE,MAAM,CAACpE,KAAP,GAAiB,EAA5C,CAAgD,CAC9C,KAAKqE,QAAL,CAAc,CACZV,OAAO,CAAE,OADG,CAAd,EAGA,KAAKW,QAAL,CAAc,MAAd,CAAsBF,MAAM,CAACzE,IAA7B,EACA,MAAO,KAAP,CACD,CAND,IAOK,IAAIwE,MAAM,CAACnE,KAAP,GAAiB,EAArB,CAAyB,CAC5B,KAAKqE,QAAL,CAAc,CACZV,OAAO,CAAE,uBADG,CAAd,EAGA,KAAKW,QAAL,CAAc,MAAd,CAAsB,IAAtB,EACA,KAAKA,QAAL,CAAc,MAAd,CAAsB,KAAtB,EACA,MAAO,KAAP,CACD,CAPI,IAQA,IAAIF,MAAM,CAACpE,KAAP,GAAiB,EAArB,CAAyB,CAC5B,KAAKqE,QAAL,CAAc,CACZV,OAAO,CAAE,uBADG,CAAd,EAGA,KAAKW,QAAL,CAAc,KAAd,CAAqB,IAArB,EACA,KAAKA,QAAL,CAAc,KAAd,CAAqB,KAArB,EACA,MAAO,KAAP,CACD,CAPI,IAQA,OAAO,MAAP,CACN,C,+DAEwC,IAAtBC,CAAAA,UAAsB,2DAAT,OAAS,CACvC,GAAInC,UAAU,CAACxC,KAAX,CAAiB4E,MAAjB,GAA4B,CAAhC,CAAmC,CACjC,MAAOpC,CAAAA,UAAU,CAACxC,KAAX,CAAiB,CAAjB,CAAP,CACD,CACD,GAAI2E,UAAU,GAAK,IAAnB,CAAyB,CACvB,MAAOjC,CAAAA,YAAY,CAACrC,iBAAb,EAAP,CACD,CACD,MAAOmC,CAAAA,UAAU,CAACnC,iBAAX,EAAP,CACD,C,4PAGCQ,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAD,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4B4B,YAAY,CAACrC,iBAAb,EAA5B,EACA,MAAOqC,YAAY,CAACrC,iBAAb,GAAmC,EAA1C,CAA8C,CAC1CQ,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,KAAK+D,GAAL,CAAS,UAAT,EACH,CACD,KAAKC,SAAL,CAAepC,YAAf,CAA6BC,YAA7B,E,+aAIOA,YAAY,CAACrC,MAAb,GAAwB,K,mDACL,MAAKyE,aAAL,E,QAApBC,W,gBACJnE,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BkE,WAA7B,E,KACIA,WAAW,CAAC,CAAD,CAAX,EAAkBA,WAAW,CAAC,CAAD,CAA7B,EAAoCA,WAAW,CAAC,CAAD,CAAX,CAAiB,G,4BACvDnE,OAAO,CAACC,GAAR,CAAY,eAAZ,EACA,KAAK+D,GAAL,CAAS,UAAT,E,gCAGAhE,OAAO,CAACC,GAAR,CAAY,eAAZ,E,2EAIJ,KAAKmE,gBAAL,CAAsBvC,YAAtB,CAAoCC,YAApC,E,gMAGOuC,I,CAAMC,U,CAAY,CACzB,GAAInF,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIoF,CAAAA,CAAC,CAAC,CAAX,CAAcA,CAAC,CAACF,IAAI,CAAClF,KAAL,CAAW4E,MAA3B,CAAmCQ,CAAC,EAApC,CAAwC,CACpC,GAAIxE,CAAAA,IAAI,CAAGsE,IAAI,CAAClF,KAAL,CAAWoF,CAAX,CAAX,CACApF,KAAK,CAACQ,IAAN,CAAW6E,OAAO,CAACzE,IAAD,CAAOwE,CAAP,CAAlB,EACA,GAAID,UAAU,GAAK,QAAf,CAA0B,KAAK5B,KAAL,CAAWK,UAAX,GAA0B,KAAxD,CAA+D,CAC7DwB,CAAC,CAAGF,IAAI,CAAClF,KAAL,CAAW4E,MAAf,CACD,CACJ,CACD,MAAO5E,CAAAA,KAAP,CACD,C,0CAEQsF,K,CAAOC,K,CAAO,CACrB,MAAOD,CAAAA,KAAK,CAACnF,KAAN,CAAcoF,KAAK,CAACpF,KAA3B,CACD,C,sDAEcoE,M,CAAQC,M,CAAQ,CAC7B,MAAOD,MAAM,CAAClE,iBAAP,GAA6B,EAApC,CAAwC,CACtC,GAAIkE,MAAM,CAACzE,KAAP,GAAiB,QAArB,CAA+B,CAC7B,KAAK+E,GAAL,CAAS,QAAT,EACD,CAFD,IAGK,CACH,KAAKA,GAAL,CAAS,UAAT,EACD,CACF,CACD,KAAKC,SAAL,CAAeP,MAAf,CAAuBC,MAAvB,EACA,KAAKgB,UAAL,GACA,KAAKf,QAAL,CAAc,CACZd,eAAe,CAAE,KADL,CAAd,EAGD,C,qDAE4C,IAA/BwB,CAAAA,UAA+B,2DAAlB,OAAkB,IAATM,CAAAA,OAAS,2CAC3C,GAAIN,UAAU,GAAK,IAAnB,CAAyB,CACvB,MAAOO,CAAAA,IAAI,CAACC,KAAL,CAAW,KAAO7C,OAAO,CAAC2C,OAAD,CAAP,EAAoB1C,UAAU,CAAG,CAAjC,CAAP,CAAX,CAAP,CACD,CACD,MAAO2C,CAAAA,IAAI,CAACC,KAAL,CAAW,KAAO9C,WAAW,CAAC4C,OAAD,CAAX,EAAwB1C,UAAU,CAAG,CAArC,CAAP,CAAX,CAAP,CACD,C,0VAGezD,CAAAA,EAAE,CAACsG,eAAH,CAAmB,YAAnB,C,QAAdhD,K,gBACIiD,kB,CAAqBvG,EAAE,CAACwG,MAAH,CAAU,CAAC,CAACpD,YAAY,CAAC1C,KAAb,CAAmB,CAAnB,CAAD,CAAwB2C,YAAY,CAACtC,iBAAb,EAAxB,CAA0D,KAAK0F,QAAL,CAAcrD,YAAd,CAA4BC,YAA5B,CAA1D,CAAqGA,YAAY,CAAC1C,IAAlH,CAAwH,CAAxH,CAAD,CAAV,C,CACrB+F,mB,CAAsB1G,EAAE,CAACwG,MAAH,CAAU,CAAC,CAACpD,YAAY,CAAC1C,KAAb,CAAmB,CAAnB,CAAD,CAAwB2C,YAAY,CAACtC,iBAAb,EAAxB,CAA0D,KAAK0F,QAAL,CAAcrD,YAAd,CAA4BC,YAA5B,CAA1D,CAAqGA,YAAY,CAAC1C,IAAlH,CAAwH,CAAxH,CAAD,CAAV,C,CACtBgG,a,CAAgBrD,KAAK,CAACsD,OAAN,CAAcL,kBAAd,EAAkCM,QAAlC,GAA6C,CAA7C,C,CAChBC,c,CAAiBxD,KAAK,CAACsD,OAAN,CAAcF,mBAAd,EAAmCG,QAAnC,GAA8C,CAA9C,C,CACrBtF,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBmF,aAArB,CAAoC,SAApC,CAA+CG,cAA/C,E,iCACO,CAACH,aAAD,CAAgBG,cAAhB,C,4MAGC7B,M,CAAQC,M,CAAQ,CACxB,GAAI6B,CAAAA,aAAa,CAAG,EAApB,CACA,GAAI7B,MAAM,CAACpE,KAAP,CAAe,EAAnB,CAAuB,CACrBiG,aAAa,CAAG,6BAAhB,CACA,KAAK3B,QAAL,CAAc,MAAd,CAAsBF,MAAM,CAACzE,IAA7B,EACD,CAHD,IAIK,IAAIwE,MAAM,CAACjE,MAAX,CAAmB,CACtB+F,aAAa,CAAG,6BAAhB,CACA,KAAK3B,QAAL,CAAc,KAAd,CAAqBF,MAAM,CAACzE,IAA5B,EACD,CAHI,IAIA,IAAIwE,MAAM,CAACnE,KAAP,CAAeoE,MAAM,CAACpE,KAA1B,CAAiC,CACpCiG,aAAa,CAAG,cAAhB,CACA,KAAK3B,QAAL,CAAc,MAAd,CAAsBF,MAAM,CAACzE,IAA7B,EACD,CAHI,IAIA,IAAIyE,MAAM,CAACpE,KAAP,CAAemE,MAAM,CAACnE,KAA1B,CAAiC,CACpCiG,aAAa,CAAG,cAAhB,CACA,KAAK3B,QAAL,CAAc,KAAd,CAAqBF,MAAM,CAACzE,IAA5B,EACD,CAHI,IAIA,CACHsG,aAAa,CAAG,OAAhB,CACA,KAAK3B,QAAL,CAAc,MAAd,CAAsBF,MAAM,CAACzE,IAA7B,EACC,CACH,GAAIwE,MAAM,CAACzE,KAAP,GAAiB,QAArB,CAA+B,CAC7B,KAAK2E,QAAL,CAAc,CACZV,OAAO,CAAEsC,aADG,CAAd,EAGD,CAJD,IAKK,CACH,KAAK5B,QAAL,CAAc,CACZT,SAAS,CAAEqC,aADC,CAAd,EAGD,CACF,C,gCAEGzG,S,CAAW,CACd,OAAQA,SAAR,EACE,IAAK,QAAL,CACE,KAAK6E,QAAL,CAAc,CACZhC,UAAU,CAAEA,UAAU,CAAC6D,OAAX,CAAmB/F,IAAnB,CADA,CAAd,EAGA,GAAIkC,UAAU,CAACnC,MAAf,CAAuB,CACrBO,OAAO,CAACC,GAAR,CAAY,MAAZ,EACA,KAAK2D,QAAL,CAAc,CACdhB,WAAW,CAAE,IADC,CAEdC,YAAY,CAAE,IAFA,CAGdC,eAAe,CAAE,KAHH,CAIdC,UAAU,CAAE,IAJE,CAKdC,UAAU,CAAE,IALE,CAMdE,OAAO,CAAE,6BANK,CAAd,EAQF,KAAKwC,cAAL,CAAoB/D,UAApB,CAAgCC,UAAhC,EACC,CACD,MACF,IAAK,QAAL,CACG,KAAKgC,QAAL,CAAc,CACZjC,UAAU,CAAEA,UAAU,CAAC8D,OAAX,CAAmB/F,IAAnB,CADA,CAAd,EAGA,GAAIiC,UAAU,CAAClC,MAAf,CAAuB,CACrB,KAAKmE,QAAL,CAAc,CACZZ,UAAU,CAAE,IADA,CAEZE,OAAO,CAAE,6BAFG,CAAd,EAID,CALD,IAMK,IAAIvB,UAAU,CAACpC,KAAX,EAAoB,EAApB,EAA0BoC,UAAU,CAACpC,KAAX,EAAoB,EAAlD,CAAsD,CACzD,KAAKqE,QAAL,CAAc,CACZZ,UAAU,CAAE,IADA,CAEZF,eAAe,CAAE,KAFL,CAAd,EAID,CACD,MACH,IAAK,UAAL,CACG,KAAKc,QAAL,CAAc,CACZ9B,YAAY,CAAEA,YAAY,CAAC2D,OAAb,CAAqB/D,MAArB,CADF,CAAd,EAGA,GAAII,YAAY,CAACrC,MAAjB,CAAyB,CACvB,KAAKmE,QAAL,CAAc,CACZX,YAAY,CAAE,IADF,CAEZE,SAAS,CAAE,4BAFC,CAAd,EAID,CACD,MACH,IAAK,UAAL,CACE,KAAKS,QAAL,CAAc,CACZ/B,YAAY,CAAEA,YAAY,CAAC4D,OAAb,CAAqB/D,MAArB,CADF,CAAd,EAGA,GAAIG,YAAY,CAACpC,MAAjB,CAAyB,CACvB,KAAKmE,QAAL,CAAc,CACZZ,UAAU,CAAE,IADA,CAEZG,SAAS,CAAE,6BAFC,CAAd,EAID,CALD,IAMK,IAAItB,YAAY,CAACtC,KAAb,EAAsB,EAAtB,EAA4BsC,YAAY,CAACtC,KAAb,EAAsB,EAAtD,CAA0D,CAC7D,KAAKqE,QAAL,CAAc,CACZZ,UAAU,CAAE,IADA,CAEZF,eAAe,CAAE,KAFL,CAAd,EAID,CACA,MACH,QACG9C,OAAO,CAACC,GAAR,CAAY,mCAAZ,EACA,MAjEL,CAmEA,C,2SAKiBxB,CAAAA,EAAE,CAACsG,eAAH,CAAmB,YAAnB,C,QAAdhD,K,iDACOA,K,6DAGP/B,OAAO,CAACC,GAAR,eACAD,OAAO,CAACC,GAAR,CAAY,mBAAZ,E,8MAIK2E,O,CAAS1F,I,CAAM,CACtB,GAAIA,IAAI,GAAK,IAAb,CAAmB,CACjB+C,OAAO,CAAC2C,OAAD,CAAP,EAAoB,CAApB,CACD,CAFD,IAGK,CACH5C,WAAW,CAAC4C,OAAD,CAAX,EAAwB,CAAxB,CACD,CACD,KAAKhB,QAAL,CAAc,CACZR,mBAAmB,CAAE,KAAKuC,aAAL,CAAmB,OAAnB,CAA4B,KAA5B,CADT,CAEZtC,oBAAoB,CAAE,KAAKsC,aAAL,CAAmB,OAAnB,CAA4B,MAA5B,CAFV,CAGZpC,eAAe,CAAE,KAAKoC,aAAL,CAAmB,IAAnB,CAAyB,KAAzB,CAHL,CAIZnC,gBAAgB,CAAE,KAAKmC,aAAL,CAAmB,IAAnB,CAAyB,MAAzB,CAJN,CAKZrC,oBAAoB,CAAE,IAAM,KAAKqC,aAAL,CAAmB,OAAnB,CAA4B,KAA5B,CAAN,CAA2C,KAAKA,aAAL,CAAmB,OAAnB,CAA4B,MAA5B,CALrD,CAMZlC,gBAAgB,CAAE,IAAM,KAAKkC,aAAL,CAAmB,IAAnB,CAAyB,KAAzB,CAAN,CAAwC,KAAKA,aAAL,CAAmB,IAAnB,CAAyB,MAAzB,CAN9C,CAAd,EAQA3F,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6B+B,WAA7B,CAA0C,eAA1C,CAA2DE,UAA3D,EACAlC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBgC,OAAzB,CAAkC,eAAlC,CAAmDC,UAAnD,EACD,C,6CAEW,CACVA,UAAU,EAAI,CAAd,CACA,KAAK0B,QAAL,CAAc,CACZhC,UAAU,CAAE,EADA,CAEZD,UAAU,CAAE,EAFA,CAGZoB,UAAU,CAAE,KAHA,CAIZC,UAAU,CAAE,KAJA,CAKZJ,WAAW,CAAE,KALD,CAMZC,YAAY,CAAE,KANF,CAOZC,eAAe,CAAE,IAPL,CAQZI,OAAO,CAAE,aARG,CASZC,SAAS,CAAE,SATC,CAAd,EAWAyC,SAAS,GACTC,SAAS,GACT,GAAI,KAAKC,iBAAL,CAAuBnE,UAAvB,CAAmCC,UAAnC,IAAmD,IAAvD,CAA6D,CAC3D,KAAKgC,QAAL,CAAc,CACZhB,WAAW,CAAE,IADD,CAEZC,YAAY,CAAE,IAFF,CAGZC,eAAe,CAAE,KAHL,CAAd,EAKD,CACD9C,OAAO,CAACC,GAAR,CAAY,OAAZ,EACD,C,kCAEIoE,I,CAAM,CACT,OAAQA,IAAI,CAACpF,KAAb,EACE,IAAK,QAAL,CACE,KAAK2E,QAAL,CAAc,CACZhB,WAAW,CAAE,IADD,CAEZC,YAAY,CAAE,IAFF,CAGZE,UAAU,CAAE,IAHA,CAAd,EAKA,KAAK2C,cAAL,CAAoB/D,UAApB,CAAgCC,UAAhC,EACF,IAAK,UAAL,CACE5B,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACF,QACED,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAXJ,CAaD,C,uCAEQ,iBACP,mBACE,4CACA,oBAAC,GAAD,EAAK,KAAK,CAAEwB,UAAZ,kBACcS,UADd,CADA,cAIA,oBAAC,GAAD,EAAK,KAAK,CAAET,UAAZ,kBACgB,KAAKiB,KAAL,CAAWU,mBAD3B,eAC2D,KAAKV,KAAL,CAAWa,eADtE,KAJA,cAOA,oBAAC,GAAD,EAAK,KAAK,CAAE9B,UAAZ,oBACkB,KAAKiB,KAAL,CAAWW,oBAD7B,iBACgE,KAAKX,KAAL,CAAWc,gBAD3E,KAPA,cAUA,oBAAC,GAAD,EAAK,KAAK,CAAE/B,UAAZ,oBACkB,KAAKiB,KAAL,CAAWY,oBAD7B,eAC8D,KAAKZ,KAAL,CAAWe,gBADzE,KAVA,cAaA,oBAAC,GAAD,EAAK,KAAK,CAAEvD,SAAZ,eACE,oBAAC,GAAD,EAAK,KAAK,CAAEQ,eAAZ,eACE,oBAAC,GAAD,EAAK,KAAK,CAAEF,YAAZ,EACG,KAAKkC,KAAL,CAAWQ,OADd,CADF,cAIE,oBAAC,GAAD,iBACW,KAAK6C,kBAAL,EADX,CAJF,cAOE,oBAAC,GAAD,EAAK,KAAK,CAAElF,WAAZ,EACG,KAAKmF,QAAL,CAAcrE,UAAd,CAA0B,QAA1B,CADH,CAPF,cAUE,oBAAC,GAAD,iBACWC,UAAU,CAACpC,iBAAX,EADX,CAVF,cAaA,oBAAC,GAAD,EAAK,KAAK,CAAEuB,WAAZ,EACG,KAAKiF,QAAL,CAAcpE,UAAd,CAA0B,QAA1B,CADH,cAEE,2BAAK,KAAK,CAAEX,WAAZ,eACE,8BAAQ,QAAQ,CAAE,KAAKyB,KAAL,CAAWE,WAA7B,CAA0C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACoB,GAAL,CAAS,QAAT,CAAN,EAAnD,CAA6E,KAAK,CAAE7C,gBAAgB,CAAC,KAAKuB,KAAL,CAAWE,WAAZ,CAApG,QADF,cAEE,8BAAQ,QAAQ,CAAE,KAAKF,KAAL,CAAWG,YAA7B,CAA2C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACoD,IAAL,CAAUrE,UAAV,CAAN,EAApD,CAAiF,KAAK,CAAET,gBAAgB,CAAC,KAAKuB,KAAL,CAAWG,YAAZ,CAAxG,SAFF,cAGE,8BAAQ,QAAQ,CAAE,KAAKH,KAAL,CAAWI,eAA7B,CAA8C,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACL,SAAL,EAAN,EAAvD,CAA+E,KAAK,CAAEtB,gBAAgB,CAAC,KAAKuB,KAAL,CAAWI,eAAZ,CAAtG,eAHF,CAFF,CAbA,CADF,cAuBE,oBAAC,GAAD,EAAK,KAAK,CAAElC,WAAZ,eACE,oBAAC,GAAD,EAAK,KAAK,CAAEJ,YAAZ,EACG,KAAKkC,KAAL,CAAWS,SADd,CADF,cAIE,oBAAC,GAAD,oBACc,KAAK4C,kBAAL,CAAwB,IAAxB,CADd,CAJF,cAOE,oBAAC,GAAD,EAAK,KAAK,CAAElF,WAAZ,EACG,KAAKmF,QAAL,CAAcnE,YAAd,CAA4B,QAA5B,CADH,CAPF,cAUE,oBAAC,GAAD,oBACcC,YAAY,CAACtC,iBAAb,EADd,CAVF,cAaE,oBAAC,GAAD,EAAK,KAAK,CAAEwB,OAAZ,EACG,KAAKgF,QAAL,CAAclE,YAAd,CAA4B,UAA5B,CADH,CAbF,CAvBF,CAbA,CADF,CAyDD,C,2BA1XyBlE,KAAK,CAACsI,S,EA6XlC,QAASN,CAAAA,SAAT,EAAqB,CACnBlG,IAAI,CAAG,EAAP,CACA,IAAK,GAAI6E,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1B,IAAK,GAAI4B,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CAC3B,GAAIA,CAAC,GAAK,EAAV,CAAc,CACZzG,IAAI,CAACC,IAAL,CAAUwG,CAAV,EACAzG,IAAI,CAACC,IAAL,CAAUwG,CAAV,EACAzG,IAAI,CAACC,IAAL,CAAUwG,CAAV,EACD,CACDzG,IAAI,CAACC,IAAL,CAAUwG,CAAV,EACD,CACF,CACDC,OAAO,CAAC1G,IAAD,CAAP,CACAgC,MAAM,CAAGhC,IAAI,CAAC2G,KAAL,EAAT,CACArG,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CAED,QAAS4F,CAAAA,SAAT,EAAqB,CACnBjE,UAAU,CAACzC,KAAX,CAAmB,EAAnB,CACAwC,UAAU,CAACxC,KAAX,CAAmB,EAAnB,CACA2C,YAAY,CAAC3C,KAAb,CAAqB,EAArB,CACA0C,YAAY,CAAC1C,KAAb,CAAqB,EAArB,CACA,IAAK,GAAIoF,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CAC1B3C,UAAU,CAAC6D,OAAX,CAAmB/F,IAAnB,EACAiC,UAAU,CAAC8D,OAAX,CAAmB/F,IAAnB,EACAoC,YAAY,CAAC2D,OAAb,CAAqB/D,MAArB,EACAG,YAAY,CAAC4D,OAAb,CAAqB/D,MAArB,EACD,CACDI,YAAY,CAACtC,iBAAb,GACAqC,YAAY,CAACrC,iBAAb,GACAQ,OAAO,CAACC,GAAR,CAAY,eAAZ,EACD,CAED,QAASuE,CAAAA,OAAT,CAAiBzE,IAAjB,CAAuBuG,KAAvB,CAA8B,CAC5B,mBACE,oBAAC,KAAD,EAAO,GAAG,CAAEA,KAAK,CAACC,QAAN,EAAZ,CAA8B,KAAK,CAAE7H,SAArC,CAAgD,GAAG,CAAEG,UAAU,CAACkB,IAAD,CAA/D,EADF,CAGD,CAED,QAASqG,CAAAA,OAAT,CAAiBI,KAAjB,CAAwB,CACtB,GAAIC,CAAAA,YAAY,CAAGD,KAAK,CAACzC,MAAzB,CAAkC2C,WAAlC,CAEA;AACA,MAAO,IAAMD,YAAb,CAA2B,CAEzB;AACAC,WAAW,CAAG7B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAAC8B,MAAL,GAAgBF,YAA3B,CAAd,CACAA,YAAY,GAEZ;AANyB,SAOmB,CAC1CD,KAAK,CAACE,WAAD,CADqC,CACtBF,KAAK,CAACC,YAAD,CADiB,CAPnB,CAOxBD,KAAK,CAACC,YAAD,CAPmB,SAOHD,KAAK,CAACE,WAAD,CAPF,SAS1B,CAED,MAAOF,CAAAA,KAAP,CACD,CAED,cAAerE,CAAAA,aAAf","sourcesContent":["import React from 'react';\r\n//import { setState } from 'react'\r\nimport '../App.css';\r\nimport { Box, Image } from 'rebass'\r\nimport twoOfSpades from '../images/2ofSpades.png'\r\nimport threeOfSpades from '../images/3ofSpades.png'\r\nimport fourOfSpades from '../images/4ofSpades.png'\r\nimport fiveOfSpades from '../images/5ofSpades.png'\r\nimport sixOfSpades from '../images/6ofSpades.png'\r\nimport sevenOfSpades from '../images/7ofSpades.png'\r\nimport eightOfSpades from '../images/8ofSpades.png'\r\nimport nineOfSpades from '../images/9ofSpades.png'\r\nimport tenOfSpades from '../images/10ofSpades.png'\r\nimport aceOfSpades from '../images/aceOfSpades.png'\r\nimport * as tf from '@tensorflow/tfjs'\r\n\r\nconst cardStyle = {\r\n  height: 'auto',\r\n  maxWidth: '20%',\r\n}\r\n\r\nconst cardValues = {\r\n  2: twoOfSpades,\r\n  3: threeOfSpades,\r\n  4: fourOfSpades,\r\n  5: fiveOfSpades,\r\n  6: sixOfSpades,\r\n  7: sevenOfSpades,\r\n  8: eightOfSpades,\r\n  9: nineOfSpades,\r\n  10: tenOfSpades,\r\n  11: aceOfSpades\r\n}\r\n\r\nclass Hand {\r\n  constructor(handOwner, ai = false) {\r\n    this.owner = handOwner;\r\n    this.isAi = ai;\r\n    this.cards = [];\r\n    this.soft = 0;\r\n    this.blackjack = false;\r\n    this.count = 0;\r\n    this.total = this.getTotalCardValue();\r\n    this.busted = false;\r\n  }\r\n\r\n  addCard(deck) {\r\n    this.cards.push(deck.pop())\r\n    this.getTotalCardValue()\r\n  }\r\n\r\n  getTotalCardValue() {\r\n    var total = 0\r\n    var handCount = 0\r\n    this.cards.forEach(card => {\r\n      if (card <= 6) {\r\n        handCount += 1\r\n      }\r\n      else if (card >= 10) {\r\n        handCount -= 1\r\n      }\r\n      this.count = handCount\r\n      if (card === 11 && total + card > 21) {\r\n        card = 1\r\n      }\r\n      else if (card === 11 && this.soft === 0) {\r\n        this.soft = 1\r\n      }\r\n      else if (total + card > 21 && this.soft === 1) {\r\n        total -= 10\r\n        this.soft = 0\r\n      }\r\n      total += card\r\n      this.total = total\r\n    });\r\n\r\n    this.total = total\r\n    if (total > 21) {\r\n      console.log(this.owner, \"busted!\")\r\n      this.busted = true;\r\n    }\r\n    else {\r\n      this.busted = false;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nconst gameStyle = {\r\n  background: 'green',\r\n  align: 'center',\r\n  display: 'flex',\r\n  borderRadius: '5px',\r\n  border: '1px solid black'\r\n}\r\n\r\nconst messageStyle = {\r\n  background: 'DarkGreen',\r\n  textAlign: 'center',\r\n  borderRadius: '20px, 20px, 20px, 20px'\r\n}\r\n\r\nconst playerSideStyle = {\r\n  width: '50%',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst aiSideStyle = {\r\n  height: '100%',\r\n  width: '50%',\r\n}\r\n\r\nconst dealerStyle = {\r\n  height: 'auto',\r\n  maxHeight: '25em',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst playerStyle = {\r\n  background: 'green',\r\n  borderRadius: '5px'\r\n}\r\n\r\nconst aiStyle = {\r\n  background: 'green',\r\n}\r\n\r\nconst gameButtons = {\r\n  margin: 'auto',\r\n  width: '100%',\r\n  align: 'center',\r\n}\r\n\r\nconst gameButtonStyles = {\r\n  false: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '50%',\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black'\r\n  },\r\n  true: {\r\n    textAlign: 'center',\r\n    height: '10%',\r\n    width: '50%',\r\n    backgroundColor: \"gray\",\r\n    color: \"black\",\r\n    fontSize: \"1.5em\",\r\n    borderRadius: '5px',\r\n    border: '1px solid black'\r\n  }\r\n};\r\n\r\nconst scoreStyle = {\r\n  textAlign: 'center'\r\n}\r\n\r\nvar deck;\r\nvar aiDeck;\r\nvar dealerHand = new Hand(\"dealer\");\r\nvar playerHand = new Hand(\"player\");\r\nvar aiDealerHand = new Hand(\"aiDealer\");\r\nvar aiPlayerHand = new Hand(\"player\", true);\r\nvar model\r\nvar playerStats = {\r\n  \"win\": 0,\r\n  \"push\": 0,\r\n  \"loss\": 0\r\n}\r\nvar aiStats = {\r\n  \"win\": 0,\r\n  \"push\": 0,\r\n  \"loss\": 0\r\n}\r\nvar totalGames = 0\r\n\r\nclass BlackjackGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    model = this.loadTheModel()\r\n    .then(function(result) {\r\n      return result\r\n    })\r\n    .catch(console.log(\"failure\"))\r\n    console.log(\"model: \", model)\r\n    this.startGame();\r\n    this.state = {\r\n      playerHand : [],\r\n      dealerHand: [],\r\n      aiHand: [],\r\n      aiDealerHand: [],\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      aiPlayerDone: false,\r\n      message: \"Hit Or Stay\",\r\n      aiMessage: \"AI Is Waiting\",\r\n      playerWinPercentage: 0,\r\n      playerPushPercentage: 0,\r\n      playerLossPercentage: 0,\r\n      aiWinPercentage: 0,\r\n      aiPushPercentage: 0,\r\n      aiLossPercentage: 0,\r\n    }\r\n  }\r\n\r\n  checkForBlackjack(dealer, player) {\r\n    if (dealer.total === 21 && player.total === 21) {\r\n      this.setState({\r\n        message: \"Push!\",\r\n      });\r\n      this.setStats(\"push\", player.isAi)\r\n      return true;\r\n    }\r\n    else if (dealer.total === 21) {\r\n      this.setState({\r\n        message: \"Dealer has blackjack!\"\r\n      })\r\n      this.setStats(\"loss\", true)\r\n      this.setStats(\"loss\", false)\r\n      return true\r\n    }\r\n    else if (player.total === 21) {\r\n      this.setState({\r\n        message: \"Player has blackjack!\"\r\n      })\r\n      this.setStats(\"win\", true)\r\n      this.setStats(\"win\", false)\r\n      return true\r\n    }\r\n    else return false\r\n  }\r\n\r\n  displayDealerTotal(dealerType = \"human\") {\r\n    if (dealerHand.cards.length === 2) {\r\n      return dealerHand.cards[0]\r\n    }\r\n    if (dealerType === \"ai\") {\r\n      return aiDealerHand.getTotalCardValue()\r\n    }\r\n    return dealerHand.getTotalCardValue()\r\n  }\r\n\r\n  async getAiDealerMoves() {\r\n    console.log(\"starting dealer moves\")\r\n    console.log(\"dealer total\", aiDealerHand.getTotalCardValue())\r\n    while (aiDealerHand.getTotalCardValue() < 17) {\r\n        console.log(\"aiDealer is hitting\")\r\n        this.hit(\"aiDealer\")\r\n    }\r\n    this.getWinner(aiDealerHand, aiPlayerHand)\r\n    }\r\n\r\n  async getAiMoves() {\r\n    while (aiPlayerHand.busted === false) {\r\n      var predictions = await this.getPrediction()\r\n      console.log(\"predictions: \", predictions)\r\n      if (predictions[0] >= predictions[1] && predictions[0] > 0.5) {\r\n        console.log(\"ai is hitting\")\r\n        this.hit(\"aiPlayer\")\r\n      }\r\n      else {\r\n        console.log(\"ai is holding\")\r\n        break\r\n      }\r\n    }\r\n    this.getAiDealerMoves(aiDealerHand, aiPlayerHand)\r\n  }\r\n\r\n  getCards(hand, playerType) {\r\n    var cards = []\r\n    for (var i=0; i<hand.cards.length; i++) {\r\n        var card = hand.cards[i]\r\n        cards.push(getCard(card, i))\r\n        if (playerType === \"dealer\" & this.state.playerDone === false) {\r\n          i = hand.cards.length\r\n        }\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  getCount(hand1, hand2) {\r\n    return hand1.count + hand2.count\r\n  }\r\n\r\n  getDealerMoves(dealer, player) {\r\n    while (dealer.getTotalCardValue() < 17) {\r\n      if (dealer.owner === \"dealer\") {\r\n        this.hit(\"dealer\")\r\n      }\r\n      else {\r\n        this.hit(\"aiDealer\")\r\n      }\r\n    }\r\n    this.getWinner(dealer, player)\r\n    this.getAiMoves()\r\n    this.setState({\r\n      restartDisabled: false\r\n    })\r\n  }\r\n\r\n  getPercentage(playerType = \"human\", endType) {\r\n    if (playerType === \"ai\") {\r\n      return Math.floor(100 * (aiStats[endType] / (totalGames + 1)))\r\n    }\r\n    return Math.floor(100 * (playerStats[endType] / (totalGames + 1)))\r\n  }\r\n\r\n  async getPrediction() {\r\n    model = await tf.loadLayersModel('model.json');\r\n    var hitPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 1]])\r\n    var stayPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 0]])\r\n    var hitPrediction = model.predict(hitPredictionInput).dataSync()[0]\r\n    var stayPrediction = model.predict(stayPredictionInput).dataSync()[0]\r\n    console.log(\"hit: \", hitPrediction, \" stay: \", stayPrediction)\r\n    return [hitPrediction, stayPrediction]\r\n    }\r\n\r\n  getWinner(dealer, player) {\r\n    var winnerMessage = \"\"\r\n    if (player.total > 21) {\r\n      winnerMessage = \"Player Busted! Dealer Wins!\"\r\n      this.setStats(\"loss\", player.isAi)\r\n    }\r\n    else if (dealer.busted) {\r\n      winnerMessage = \"Dealer Busted! Player Wins!\"\r\n      this.setStats(\"win\", player.isAi)\r\n    }\r\n    else if (dealer.total > player.total) {\r\n      winnerMessage = \"Dealer Wins!\"\r\n      this.setStats(\"loss\", player.isAi)\r\n    }\r\n    else if (player.total > dealer.total) {\r\n      winnerMessage = \"Player Wins!\"\r\n      this.setStats(\"win\", player.isAi)\r\n    }\r\n    else {\r\n      winnerMessage = \"Push!\"\r\n      this.setStats(\"push\", player.isAi)\r\n      }\r\n    if (dealer.owner === \"dealer\") {\r\n      this.setState({\r\n        message: winnerMessage\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        aiMessage: winnerMessage\r\n      })\r\n    }\r\n  }\r\n\r\n  hit(handOwner) {\r\n   switch (handOwner) {\r\n     case \"player\":\r\n       this.setState({\r\n         playerHand: playerHand.addCard(deck)\r\n       })\r\n       if (playerHand.busted) {\r\n         console.log(\"bust\");\r\n         this.setState({\r\n         hitDisabled: true,\r\n         stayDisabled: true,\r\n         restartDisabled: false,\r\n         playerDone: true,\r\n         dealerDone: true,\r\n         message: \"Player busted! Dealer Wins!\"\r\n       })\r\n       this.getDealerMoves(dealerHand, playerHand)\r\n       }\r\n       break;\r\n     case \"dealer\":\r\n        this.setState({\r\n          dealerHand: dealerHand.addCard(deck)\r\n        })\r\n        if (dealerHand.busted) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            message: \"Dealer Busted! Player Wins!\"\r\n          })\r\n        }\r\n        else if (dealerHand.total >= 17 && dealerHand.total <= 21) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            restartDisabled: false,\r\n          })\r\n        }\r\n        break;\r\n     case \"aiPlayer\":\r\n        this.setState({\r\n          aiPlayerHand: aiPlayerHand.addCard(aiDeck)\r\n        })\r\n        if (aiPlayerHand.busted) {\r\n          this.setState({\r\n            aiPlayerDone: true,\r\n            aiMessage: \"AI Busted! AI Dealer Wins!\"\r\n          })\r\n        }\r\n        break;\r\n     case \"aiDealer\":\r\n       this.setState({\r\n         aiDealerHand: aiDealerHand.addCard(aiDeck)\r\n       })\r\n       if (aiDealerHand.busted) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           aiMessage: \"Dealer Busted! Player Wins!\"\r\n         })\r\n       }\r\n       else if (aiDealerHand.total >= 17 && aiDealerHand.total <= 21) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           restartDisabled: false,\r\n         })\r\n       }\r\n        break;\r\n     default:\r\n        console.log(\"Error: Player type not recognized\")\r\n        break;\r\n      }\r\n  }\r\n\r\n  async loadTheModel () {\r\n    var model\r\n    try {\r\n      model = await tf.loadLayersModel('model.json');\r\n      return model\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"failed load model\");\r\n    }\r\n  }\r\n\r\n  setStats(endType, isAi) {\r\n    if (isAi === true) {\r\n      aiStats[endType] += 1;\r\n    }\r\n    else {\r\n      playerStats[endType] += 1\r\n    }\r\n    this.setState({\r\n      playerWinPercentage: this.getPercentage(\"human\", \"win\"),\r\n      playerPushPercentage: this.getPercentage(\"human\", \"push\"),\r\n      aiWinPercentage: this.getPercentage(\"ai\", \"win\"),\r\n      aiPushPercentage: this.getPercentage(\"ai\", \"push\"),\r\n      playerLossPercentage: 100 - this.getPercentage(\"human\", \"win\") - this.getPercentage(\"human\", \"push\"),\r\n      aiLossPercentage: 100 - this.getPercentage(\"ai\", \"win\") - this.getPercentage(\"ai\", \"push\")\r\n    })\r\n    console.log(\"playerStats: \", playerStats, \" totalGames: \", totalGames)\r\n    console.log(\"aiStats: \", aiStats, \" totalGames: \", totalGames)\r\n  }\r\n\r\n  startGame() {\r\n    totalGames += 1\r\n    this.setState({\r\n      playerHand: [],\r\n      dealerHand: [],\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      message: \"hit or stay\",\r\n      aiMessage: \"AI Side\"\r\n    })\r\n    buildDeck()\r\n    dealCards()\r\n    if (this.checkForBlackjack(dealerHand, playerHand) === true) {\r\n      this.setState({\r\n        hitDisabled: true,\r\n        stayDisabled: true,\r\n        restartDisabled: false\r\n      })\r\n    }\r\n    console.log('start')\r\n  }\r\n\r\n  stay(hand) {\r\n    switch (hand.owner) {\r\n      case \"player\":\r\n        this.setState({\r\n          hitDisabled: true,\r\n          stayDisabled: true,\r\n          playerDone: true,\r\n        })\r\n        this.getDealerMoves(dealerHand, playerHand)\r\n      case \"aiPlayer\":\r\n        console.log(\"aiPlayer stayed\")\r\n      default:\r\n        console.log(\"unknown player stayed\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Box style={scoreStyle}>\r\n      Total Games: {totalGames}\r\n      </Box>\r\n      <Box style={scoreStyle}>\r\n        Player Wins: {this.state.playerWinPercentage}% AI Wins: {this.state.aiWinPercentage}%\r\n      </Box>\r\n      <Box style={scoreStyle}>\r\n        Player Pushes: {this.state.playerPushPercentage}% AI Pushes: {this.state.aiPushPercentage}%\r\n      </Box>\r\n      <Box style={scoreStyle}>\r\n        Player Losses: {this.state.playerLossPercentage}% AI Loss: {this.state.aiLossPercentage}%\r\n      </Box>\r\n      <Box style={gameStyle}>\r\n        <Box style={playerSideStyle}>\r\n          <Box style={messageStyle}>\r\n            {this.state.message}\r\n          </Box>\r\n          <Box>\r\n            Dealer: {this.displayDealerTotal()}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            {this.getCards(dealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box>\r\n            Player: {playerHand.getTotalCardValue()}\r\n          </Box>\r\n        <Box style={playerStyle}>\r\n          {this.getCards(playerHand, \"player\")}\r\n          <div style={gameButtons}>\r\n            <button disabled={this.state.hitDisabled} onClick={() => this.hit(\"player\")} style={gameButtonStyles[this.state.hitDisabled]}>HIT</button>\r\n            <button disabled={this.state.stayDisabled} onClick={() => this.stay(playerHand)} style={gameButtonStyles[this.state.stayDisabled]}>STAY</button>\r\n            <button disabled={this.state.restartDisabled} onClick={() => this.startGame()} style={gameButtonStyles[this.state.restartDisabled]}>PLAY AGAIN</button>\r\n          </div>\r\n          </Box>\r\n        </Box>\r\n        <Box style={aiSideStyle}>\r\n          <Box style={messageStyle}>\r\n            {this.state.aiMessage}\r\n          </Box>\r\n          <Box>\r\n            AI Dealer: {this.displayDealerTotal(\"ai\")}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            {this.getCards(aiDealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box>\r\n            AI Player: {aiPlayerHand.getTotalCardValue()}\r\n          </Box>\r\n          <Box style={aiStyle}>\r\n            {this.getCards(aiPlayerHand, \"aiPlayer\")}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDeck() {\r\n  deck = []\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 2; j < 12; j++) {\r\n      if (j === 10) {\r\n        deck.push(j)\r\n        deck.push(j)\r\n        deck.push(j)\r\n      }\r\n      deck.push(j)\r\n    }\r\n  }\r\n  shuffle(deck)\r\n  aiDeck = deck.slice()\r\n  console.log(\"building deck\")\r\n}\r\n\r\nfunction dealCards() {\r\n  playerHand.cards = [];\r\n  dealerHand.cards = [];\r\n  aiPlayerHand.cards = [];\r\n  aiDealerHand.cards = [];\r\n  for (var i = 0; i < 2; i++) {\r\n    playerHand.addCard(deck)\r\n    dealerHand.addCard(deck)\r\n    aiPlayerHand.addCard(aiDeck)\r\n    aiDealerHand.addCard(aiDeck)\r\n  }\r\n  aiPlayerHand.getTotalCardValue()\r\n  aiDealerHand.getTotalCardValue()\r\n  console.log(\"dealing cards\")\r\n}\r\n\r\nfunction getCard(card, index) {\r\n  return (\r\n    <Image key={index.toString()} style={cardStyle} src={cardValues[card]}/>\r\n  );\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default BlackjackGame;\r\n"]},"metadata":{},"sourceType":"module"}