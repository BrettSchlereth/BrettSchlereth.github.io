{"ast":null,"code":"var _jsxFileName = \"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\src\\\\components\\\\BlackjackGame.js\";\nimport React from 'react';\nimport '../App.css';\nimport { Flex, Box, Image } from 'rebass';\nimport blackjackImage from '../images/BlackjackImage.png';\nimport CardsDisplay from './CardsDisplay.js';\nconst gameStyle = {\n  background: 'brown',\n  align: 'center',\n  display: 'flex'\n};\nconst playerSideStyle = {\n  width: '50%'\n};\nconst aiSideStyle = {\n  height: '100%',\n  width: '50%'\n};\nconst dealerStyle = {\n  height: 'auto',\n  maxHeight: '25em',\n  background: 'blue'\n};\nconst playerStyle = {\n  background: 'green'\n};\nconst aiStyle = {\n  background: 'gray'\n};\nconst cardsDisplayStyle = {\n  display: 'block',\n  height: '100%',\n  margin: 'auto'\n};\nconst cardStyle = {\n  height: 'auto',\n  maxWidth: '20%'\n};\nvar deck;\nvar aiDeck;\nvar dealerHand;\nvar playerHand;\nvar aiDealerHand;\nvar aiHand;\n\nconst BlackjackGame = () => {\n  startGame();\n  return /*#__PURE__*/React.createElement(Box, {\n    style: gameStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: playerSideStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: dealerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Dealer\", /*#__PURE__*/React.createElement(CardsDisplay, {\n    hand: dealerHand,\n    playerType: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    style: playerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Player\", /*#__PURE__*/React.createElement(CardsDisplay, {\n    hand: playerHand,\n    playerType: \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    style: aiSideStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: dealerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"AI Dealer\", /*#__PURE__*/React.createElement(CardsDisplay, {\n    hand: aiDealerHand,\n    playerType: \"dealer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    style: aiStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"AI Player\", /*#__PURE__*/React.createElement(CardsDisplay, {\n    hand: aiHand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n};\n\nfunction startGame() {\n  buildDeck();\n  dealCards(); //check for blackjack\n  //get player moves until stay or bust\n  //get dealer moves\n  //let the ai play\n  //let the ai's dealer play\n  //add scores\n  //clear on restart\n\n  console.log('start');\n}\n\nfunction buildDeck() {\n  deck = [];\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 2; j < 12; j++) {\n      if (j == 10) {\n        deck.push(j);\n        deck.push(j);\n        deck.push(j);\n      }\n\n      deck.push(j);\n    }\n  }\n\n  shuffle(deck);\n  aiDeck = deck;\n}\n\nfunction dealCards() {\n  playerHand = [];\n  dealerHand = [];\n  aiHand = [];\n  aiDealerHand = [];\n\n  for (var i = 0; i < 2; i++) {\n    playerHand.push(deck.pop());\n    dealerHand.push(deck.pop());\n  }\n\n  aiHand = playerHand;\n  aiDealerHand = dealerHand;\n}\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n      randomIndex; // While there remain elements to shuffle...\n\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--; // And swap it with the current element.\n\n    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n  }\n\n  return array;\n}\n\nfunction getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nfunction hit() {\n  console.log('hit');\n  playerHand.push(deck.pop());\n}\n\nfunction stay() {\n  console.log('stay');\n}\n\nfunction restart() {\n  console.log('restart');\n}\n\nexport default BlackjackGame;","map":{"version":3,"sources":["G:/GithubWebsite/portfoliowebsite/src/components/BlackjackGame.js"],"names":["React","Flex","Box","Image","blackjackImage","CardsDisplay","gameStyle","background","align","display","playerSideStyle","width","aiSideStyle","height","dealerStyle","maxHeight","playerStyle","aiStyle","cardsDisplayStyle","margin","cardStyle","maxWidth","deck","aiDeck","dealerHand","playerHand","aiDealerHand","aiHand","BlackjackGame","startGame","buildDeck","dealCards","console","log","i","j","push","shuffle","pop","array","currentIndex","length","randomIndex","Math","floor","random","getRandomIntInclusive","min","max","ceil","hit","stay","restart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport { Flex, Box, Image } from 'rebass'\r\nimport blackjackImage from '../images/BlackjackImage.png'\r\nimport CardsDisplay from './CardsDisplay.js'\r\n\r\nconst gameStyle = {\r\n  background: 'brown',\r\n  align: 'center',\r\n  display: 'flex'\r\n}\r\n\r\nconst playerSideStyle = {\r\n  width: '50%',\r\n}\r\n\r\nconst aiSideStyle = {\r\n  height: '100%',\r\n  width: '50%',\r\n}\r\n\r\nconst dealerStyle = {\r\n  height: 'auto',\r\n  maxHeight: '25em',\r\n  background: 'blue',\r\n}\r\n\r\nconst playerStyle = {\r\n  background: 'green',\r\n}\r\n\r\nconst aiStyle = {\r\n  background: 'gray',\r\n}\r\n\r\nconst cardsDisplayStyle = {\r\n  display: 'block',\r\n  height: '100%',\r\n  margin: 'auto',\r\n}\r\n\r\nconst cardStyle = {\r\n  height: 'auto',\r\n  maxWidth: '20%',\r\n}\r\n\r\n\r\nvar deck;\r\nvar aiDeck;\r\nvar dealerHand;\r\nvar playerHand;\r\nvar aiDealerHand;\r\nvar aiHand;\r\n\r\nconst BlackjackGame = () => {\r\n  startGame()\r\n  return (\r\n    <Box style={gameStyle}>\r\n      <Box style={playerSideStyle}>\r\n        <Box style={dealerStyle}>\r\n          Dealer\r\n          <CardsDisplay hand={dealerHand} playerType=\"dealer\"/>\r\n        </Box>\r\n      <Box style={playerStyle}>\r\n        Player\r\n        <CardsDisplay hand={playerHand} playerType=\"player\"/>\r\n        </Box>\r\n      </Box>\r\n      <Box style={aiSideStyle}>\r\n        <Box style={dealerStyle}>\r\n          AI Dealer\r\n          <CardsDisplay hand={aiDealerHand} playerType=\"dealer\"/>\r\n        </Box>\r\n        <Box style={aiStyle}>\r\n          AI Player\r\n          <CardsDisplay hand={aiHand}/>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n)\r\n}\r\n\r\nfunction startGame() {\r\n  buildDeck()\r\n  dealCards()\r\n  //check for blackjack\r\n  //get player moves until stay or bust\r\n  //get dealer moves\r\n  //let the ai play\r\n  //let the ai's dealer play\r\n  //add scores\r\n  //clear on restart\r\n  console.log('start')\r\n}\r\n\r\nfunction buildDeck() {\r\n  deck = []\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 2; j < 12; j++) {\r\n      if (j == 10) {\r\n        deck.push(j)\r\n        deck.push(j)\r\n        deck.push(j)\r\n      }\r\n      deck.push(j)\r\n    }\r\n  }\r\n  shuffle(deck)\r\n  aiDeck = deck\r\n}\r\n\r\nfunction dealCards() {\r\n  playerHand = [];\r\n  dealerHand = [];\r\n  aiHand = [];\r\n  aiDealerHand = [];\r\n  for (var i = 0; i < 2; i++) {\r\n    playerHand.push(deck.pop())\r\n    dealerHand.push(deck.pop())\r\n  }\r\n  aiHand = playerHand\r\n  aiDealerHand = dealerHand\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\r\n}\r\n\r\nfunction hit() {\r\n  console.log('hit')\r\n  playerHand.push(deck.pop())\r\n\r\n}\r\n\r\nfunction stay() {\r\n  console.log('stay')\r\n}\r\n\r\nfunction restart() {\r\n  console.log('restart')\r\n}\r\n\r\nexport default BlackjackGame;\r\n"]},"metadata":{},"sourceType":"module"}