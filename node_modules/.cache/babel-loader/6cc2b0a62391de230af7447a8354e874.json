{"ast":null,"code":"import _regeneratorRuntime from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _inherits from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _classCallCheck from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"G:\\\\GithubWebsite\\\\portfoliowebsite\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import React from'react';//import { setState } from 'react'\nimport'../App.css';import{Box,Image}from'rebass';import twoOfSpades from'../images/2ofSpades.png';import threeOfSpades from'../images/3ofSpades.png';import fourOfSpades from'../images/4ofSpades.png';import fiveOfSpades from'../images/5ofSpades.png';import sixOfSpades from'../images/6ofSpades.png';import sevenOfSpades from'../images/7ofSpades.png';import eightOfSpades from'../images/8ofSpades.png';import nineOfSpades from'../images/9ofSpades.png';import tenOfSpades from'../images/10ofSpades.png';import aceOfSpades from'../images/aceOfSpades.png';import*as tf from'@tensorflow/tfjs';var cardStyle={height:'auto',maxWidth:'20%'};var cardValues={2:twoOfSpades,3:threeOfSpades,4:fourOfSpades,5:fiveOfSpades,6:sixOfSpades,7:sevenOfSpades,8:eightOfSpades,9:nineOfSpades,10:tenOfSpades,11:aceOfSpades};var Hand=/*#__PURE__*/function(){function Hand(handOwner){_classCallCheck(this,Hand);this.owner=handOwner;this.cards=[];this.soft=0;this.blackjack=false;this.count=0;this.total=this.getTotalCardValue();this.busted=false;}_createClass(Hand,[{key:\"addCard\",value:function addCard(deck){this.cards.push(deck.pop());this.getTotalCardValue();}},{key:\"getTotalCardValue\",value:function getTotalCardValue(){var _this=this;var total=0;var handCount=0;this.cards.forEach(function(card){if(card<=6){handCount+=1;}else if(card>=10){handCount-=1;}_this.count=handCount;if(card===11&&total+card>21){card=1;}else if(card===11&&_this.soft===0){_this.soft=1;}else if(total+card>21&&_this.soft===1){total-=10;_this.soft=0;}total+=card;_this.total=total;});this.total=total;if(total>21){console.log(this.owner,\"busted!\");this.busted=true;}else{this.busted=false;}return total;}}]);return Hand;}();var gameStyle={background:'brown',align:'center',display:'flex'};var playerSideStyle={width:'50%'};var aiSideStyle={height:'100%',width:'50%'};var dealerStyle={height:'auto',maxHeight:'25em',background:'blue'};var playerStyle={background:'green'};var aiStyle={background:'gray'};var gameButtons={margin:'auto',width:'100%',align:'center'};var gameButton={textAlign:'center',height:'10%',width:'50%'};var deck;var aiDeck;var dealerHand=new Hand(\"dealer\");var playerHand=new Hand(\"player\");var aiDealerHand=new Hand(\"aiDealer\");var aiPlayerHand=new Hand(\"player\");var model;var BlackjackGame=/*#__PURE__*/function(_React$Component){_inherits(BlackjackGame,_React$Component);var _super=_createSuper(BlackjackGame);function BlackjackGame(props){var _this2;_classCallCheck(this,BlackjackGame);_this2=_super.call(this,props);model=_this2.loadTheModel().then(function(result){return result;}).catch(console.log(\"failure\"));console.log(\"model: \",model);_this2.startGame();_this2.state={playerHand:[],dealerHand:[],aiHand:[],aiDealerHand:[],hitDisabled:false,stayDisabled:false,restartDisabled:true,playerDone:false,dealerDone:false,aiPlayerDone:false,message:\"hit or stay\",aiMessage:\"\"};return _this2;}_createClass(BlackjackGame,[{key:\"checkForBlackjack\",value:function checkForBlackjack(dealer,player){if(dealer.total===21&&player.total===21){this.setState({message:\"Push!\"});return true;}else if(dealer.total===21){this.setState({message:\"Dealer has blackjack!\"});return true;}else if(player.total===21){this.setState({message:\"Player has blackjack!\"});return true;}else return false;}},{key:\"getAiDealerMoves\",value:function(){var _getAiDealerMoves=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"starting dealer moves\");console.log(\"dealer total\",aiDealerHand.getTotalCardValue());while(aiDealerHand.getTotalCardValue()<17){console.log(\"aiDealer is hitting\");this.hit(\"aiDealer\");}this.getWinner(aiDealerHand,aiPlayerHand);case 4:case\"end\":return _context.stop();}}},_callee,this);}));function getAiDealerMoves(){return _getAiDealerMoves.apply(this,arguments);}return getAiDealerMoves;}()},{key:\"getAiMoves\",value:function(){var _getAiMoves=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var predictions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(aiPlayerHand.busted===false)){_context2.next=14;break;}_context2.next=3;return this.getPrediction();case 3:predictions=_context2.sent;console.log(\"predictions: \",predictions);if(!(predictions[0]>=predictions[1]&&predictions[0]>0.5)){_context2.next=10;break;}console.log(\"ai is hitting\");this.hit(\"aiPlayer\");_context2.next=12;break;case 10:console.log(\"ai is holding\");return _context2.abrupt(\"break\",14);case 12:_context2.next=0;break;case 14:if(aiPlayerHand.total>21){console.log(\"AI player busted!\");}this.getAiDealerMoves(aiDealerHand,aiPlayerHand);case 16:case\"end\":return _context2.stop();}}},_callee2,this);}));function getAiMoves(){return _getAiMoves.apply(this,arguments);}return getAiMoves;}()},{key:\"getCards\",value:function getCards(hand,playerType){var cards=[];for(var i=0;i<hand.cards.length;i++){var card=hand.cards[i];cards.push(getCard(card,i));if(playerType===\"dealer\"&this.state.playerDone===false){i=hand.cards.length;}}return cards;}},{key:\"getCount\",value:function getCount(hand1,hand2){return hand1.count+hand2.count;}},{key:\"getDealerMoves\",value:function getDealerMoves(dealer,player){while(dealer.getTotalCardValue()<17){if(dealer.owner===\"dealer\"){this.hit(\"dealer\");}else{this.hit(\"aiDealer\");}}this.getWinner(dealer,player);this.getAiMoves();this.setState({restartDisabled:false});}},{key:\"getPrediction\",value:function(){var _getPrediction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var hitPredictionInput,stayPredictionInput,hitPrediction,stayPrediction;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return tf.loadLayersModel('model.json');case 2:model=_context3.sent;hitPredictionInput=tf.tensor([[aiDealerHand.cards[0],aiPlayerHand.getTotalCardValue(),this.getCount(aiDealerHand,aiPlayerHand),aiPlayerHand.soft,1]]);stayPredictionInput=tf.tensor([[aiDealerHand.cards[0],aiPlayerHand.getTotalCardValue(),this.getCount(aiDealerHand,aiPlayerHand),aiPlayerHand.soft,0]]);hitPrediction=model.predict(hitPredictionInput).dataSync()[0];stayPrediction=model.predict(stayPredictionInput).dataSync()[0];console.log(\"hit: \",hitPrediction,\" stay: \",stayPrediction);return _context3.abrupt(\"return\",[hitPrediction,stayPrediction]);case 9:case\"end\":return _context3.stop();}}},_callee3,this);}));function getPrediction(){return _getPrediction.apply(this,arguments);}return getPrediction;}()},{key:\"getWinner\",value:function getWinner(dealer,player){var winnerMessage=\"\";if(player.total>21){winnerMessage=\"Player Busted! Dealer Wins!\";}else if(dealer.busted){winnerMessage=\"Dealer Busted! Player Wins!\";}else if(dealer.total>player.total){winnerMessage=\"Dealer Wins!\";}else if(player.total>dealer.total){winnerMessage=\"Player Wins!\";}else{winnerMessage=\"Push!\";}if(dealer.owner===\"dealer\"){this.setState({message:winnerMessage});}else{this.setState({aiMessage:winnerMessage});}}},{key:\"hit\",value:function hit(handOwner){switch(handOwner){case\"player\":this.setState({playerHand:playerHand.addCard(deck)});if(playerHand.busted){console.log(\"bust\");this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false,playerDone:true,dealerDone:true,message:\"Player busted! Dealer Wins!\"});this.getDealerMoves(dealerHand,playerHand);}break;case\"dealer\":this.setState({dealerHand:dealerHand.addCard(deck)});if(dealerHand.busted){this.setState({dealerDone:true,message:\"Dealer Busted! Player Wins!\"});}else if(dealerHand.total>=17&&dealerHand.total<=21){this.setState({dealerDone:true,restartDisabled:false});}break;case\"aiPlayer\":this.setState({aiPlayerHand:aiPlayerHand.addCard(aiDeck)});if(aiPlayerHand.busted){this.setState({aiPlayerDone:true,aiMessage:\"AI Busted! AI Dealer Wins!\"});}break;case\"aiDealer\":this.setState({aiDealerHand:aiDealerHand.addCard(aiDeck)});if(aiDealerHand.busted){this.setState({dealerDone:true,aiMessage:\"Dealer Busted! Player Wins!\"});}else if(aiDealerHand.total>=17&&aiDealerHand.total<=21){this.setState({dealerDone:true,restartDisabled:false});}break;default:console.log(\"Error: Player type not recognized\");break;}}},{key:\"loadTheModel\",value:function(){var _loadTheModel=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var model;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return tf.loadLayersModel('model.json');case 3:model=_context4.sent;return _context4.abrupt(\"return\",model);case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);console.log(\"failed load model\");case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));function loadTheModel(){return _loadTheModel.apply(this,arguments);}return loadTheModel;}()},{key:\"startGame\",value:function startGame(){this.setState({playerHand:[],dealerHand:[],playerDone:false,dealerDone:false,hitDisabled:false,stayDisabled:false,restartDisabled:true,message:\"hit or stay\",aiMessage:\"AI Side\"});buildDeck();dealCards();if(this.checkForBlackjack(dealerHand,playerHand)===true){this.setState({hitDisabled:true,stayDisabled:true,restartDisabled:false});}console.log('start');}},{key:\"stay\",value:function stay(hand){switch(hand.owner){case\"player\":this.setState({hitDisabled:true,stayDisabled:true,playerDone:true});this.getDealerMoves(dealerHand,playerHand);case\"aiPlayer\":console.log(\"aiPlayer stayed\");default:console.log(\"unknown player stayed\");}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(Box,{style:gameStyle},/*#__PURE__*/React.createElement(Box,{style:playerSideStyle},/*#__PURE__*/React.createElement(Box,null,this.state.message),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},\"Dealer\",this.getCards(dealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,{style:playerStyle},\"Player\",this.getCards(playerHand,\"player\"),/*#__PURE__*/React.createElement(\"div\",{style:gameButtons},/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.hitDisabled,onClick:function onClick(){return _this3.hit(\"player\");},style:gameButton},\"HIT\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.stayDisabled,onClick:function onClick(){return _this3.stay(playerHand);},style:gameButton},\"STAY\"),/*#__PURE__*/React.createElement(\"button\",{disabled:this.state.restartDisabled,onClick:function onClick(){return _this3.startGame();},style:gameButton},\"PLAY AGAIN\")))),/*#__PURE__*/React.createElement(Box,{style:aiSideStyle},/*#__PURE__*/React.createElement(Box,null,this.state.aiMessage),/*#__PURE__*/React.createElement(Box,{style:dealerStyle},\"AI Dealer\",this.getCards(aiDealerHand,\"dealer\")),/*#__PURE__*/React.createElement(Box,{style:aiStyle},\"AI Player\",this.getCards(aiPlayerHand,\"aiPlayer\"))));}}]);return BlackjackGame;}(React.Component);function buildDeck(){deck=[];for(var i=0;i<8;i++){for(var j=2;j<12;j++){if(j===10){deck.push(j);deck.push(j);deck.push(j);}deck.push(j);}}shuffle(deck);aiDeck=deck.slice();console.log(\"building deck\");}function dealCards(){playerHand.cards=[];dealerHand.cards=[];aiPlayerHand.cards=[];aiDealerHand.cards=[];for(var i=0;i<2;i++){playerHand.addCard(deck);dealerHand.addCard(deck);aiPlayerHand.addCard(aiDeck);aiDealerHand.addCard(aiDeck);}aiPlayerHand.getTotalCardValue();aiDealerHand.getTotalCardValue();console.log(\"dealing cards\");}function getCard(card,index){return/*#__PURE__*/React.createElement(Image,{key:index.toString(),style:cardStyle,src:cardValues[card]});}function shuffle(array){var currentIndex=array.length,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex--;// And swap it with the current element.\nvar _ref=[array[randomIndex],array[currentIndex]];array[currentIndex]=_ref[0];array[randomIndex]=_ref[1];}return array;}export default BlackjackGame;","map":{"version":3,"sources":["G:/GithubWebsite/portfoliowebsite/src/components/BlackjackGame.js"],"names":["React","Box","Image","twoOfSpades","threeOfSpades","fourOfSpades","fiveOfSpades","sixOfSpades","sevenOfSpades","eightOfSpades","nineOfSpades","tenOfSpades","aceOfSpades","tf","cardStyle","height","maxWidth","cardValues","Hand","handOwner","owner","cards","soft","blackjack","count","total","getTotalCardValue","busted","deck","push","pop","handCount","forEach","card","console","log","gameStyle","background","align","display","playerSideStyle","width","aiSideStyle","dealerStyle","maxHeight","playerStyle","aiStyle","gameButtons","margin","gameButton","textAlign","aiDeck","dealerHand","playerHand","aiDealerHand","aiPlayerHand","model","BlackjackGame","props","loadTheModel","then","result","catch","startGame","state","aiHand","hitDisabled","stayDisabled","restartDisabled","playerDone","dealerDone","aiPlayerDone","message","aiMessage","dealer","player","setState","hit","getWinner","getPrediction","predictions","getAiDealerMoves","hand","playerType","i","length","getCard","hand1","hand2","getAiMoves","loadLayersModel","hitPredictionInput","tensor","getCount","stayPredictionInput","hitPrediction","predict","dataSync","stayPrediction","winnerMessage","addCard","getDealerMoves","buildDeck","dealCards","checkForBlackjack","getCards","stay","Component","j","shuffle","slice","index","toString","array","currentIndex","randomIndex","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import { setState } from 'react'\r\nimport '../App.css';\r\nimport { Box, Image } from 'rebass'\r\nimport twoOfSpades from '../images/2ofSpades.png'\r\nimport threeOfSpades from '../images/3ofSpades.png'\r\nimport fourOfSpades from '../images/4ofSpades.png'\r\nimport fiveOfSpades from '../images/5ofSpades.png'\r\nimport sixOfSpades from '../images/6ofSpades.png'\r\nimport sevenOfSpades from '../images/7ofSpades.png'\r\nimport eightOfSpades from '../images/8ofSpades.png'\r\nimport nineOfSpades from '../images/9ofSpades.png'\r\nimport tenOfSpades from '../images/10ofSpades.png'\r\nimport aceOfSpades from '../images/aceOfSpades.png'\r\nimport * as tf from '@tensorflow/tfjs'\r\n\r\nconst cardStyle = {\r\n  height: 'auto',\r\n  maxWidth: '20%',\r\n}\r\n\r\nconst cardValues = {\r\n  2: twoOfSpades,\r\n  3: threeOfSpades,\r\n  4: fourOfSpades,\r\n  5: fiveOfSpades,\r\n  6: sixOfSpades,\r\n  7: sevenOfSpades,\r\n  8: eightOfSpades,\r\n  9: nineOfSpades,\r\n  10: tenOfSpades,\r\n  11: aceOfSpades\r\n}\r\n\r\nclass Hand {\r\n  constructor(handOwner) {\r\n    this.owner = handOwner;\r\n    this.cards = [];\r\n    this.soft = 0;\r\n    this.blackjack = false;\r\n    this.count = 0;\r\n    this.total = this.getTotalCardValue();\r\n    this.busted = false;\r\n  }\r\n\r\n  addCard(deck) {\r\n    this.cards.push(deck.pop())\r\n    this.getTotalCardValue()\r\n  }\r\n\r\n  getTotalCardValue() {\r\n    var total = 0\r\n    var handCount = 0\r\n    this.cards.forEach(card => {\r\n      if (card <= 6) {\r\n        handCount += 1\r\n      }\r\n      else if (card >= 10) {\r\n        handCount -= 1\r\n      }\r\n      this.count = handCount\r\n      if (card === 11 && total + card > 21) {\r\n        card = 1\r\n      }\r\n      else if (card === 11 && this.soft === 0) {\r\n        this.soft = 1\r\n      }\r\n      else if (total + card > 21 && this.soft === 1) {\r\n        total -= 10\r\n        this.soft = 0\r\n      }\r\n      total += card\r\n      this.total = total\r\n    });\r\n\r\n    this.total = total\r\n    if (total > 21) {\r\n      console.log(this.owner, \"busted!\")\r\n      this.busted = true;\r\n    }\r\n    else {\r\n      this.busted = false;\r\n    }\r\n    return total;\r\n  }\r\n}\r\n\r\nconst gameStyle = {\r\n  background: 'brown',\r\n  align: 'center',\r\n  display: 'flex'\r\n}\r\n\r\nconst playerSideStyle = {\r\n  width: '50%',\r\n}\r\n\r\nconst aiSideStyle = {\r\n  height: '100%',\r\n  width: '50%',\r\n}\r\n\r\nconst dealerStyle = {\r\n  height: 'auto',\r\n  maxHeight: '25em',\r\n  background: 'blue',\r\n}\r\n\r\nconst playerStyle = {\r\n  background: 'green',\r\n}\r\n\r\nconst aiStyle = {\r\n  background: 'gray',\r\n}\r\n\r\nconst gameButtons = {\r\n  margin: 'auto',\r\n  width: '100%',\r\n  align: 'center',\r\n}\r\n\r\nconst gameButton = {\r\n  textAlign: 'center',\r\n  height: '10%',\r\n  width: '50%'\r\n}\r\n\r\nvar deck;\r\nvar aiDeck;\r\nvar dealerHand = new Hand(\"dealer\");\r\nvar playerHand = new Hand(\"player\");\r\nvar aiDealerHand = new Hand(\"aiDealer\");\r\nvar aiPlayerHand = new Hand(\"player\");\r\nvar model\r\n\r\nclass BlackjackGame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    model = this.loadTheModel()\r\n    .then(function(result) {\r\n      return result\r\n    })\r\n    .catch(console.log(\"failure\"))\r\n    console.log(\"model: \", model)\r\n    this.startGame();\r\n    this.state = {\r\n      playerHand : [],\r\n      dealerHand: [],\r\n      aiHand: [],\r\n      aiDealerHand: [],\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      aiPlayerDone: false,\r\n      message: \"hit or stay\",\r\n      aiMessage: \"\",\r\n    }\r\n\r\n  }\r\n\r\n  checkForBlackjack(dealer, player) {\r\n    if (dealer.total === 21 && player.total === 21) {\r\n      this.setState({\r\n        message: \"Push!\",\r\n      });\r\n      return true;\r\n    }\r\n    else if (dealer.total === 21) {\r\n      this.setState({\r\n        message: \"Dealer has blackjack!\"\r\n      })\r\n      return true\r\n    }\r\n    else if (player.total === 21) {\r\n      this.setState({\r\n        message: \"Player has blackjack!\"\r\n      })\r\n      return true\r\n    }\r\n    else return false\r\n    }\r\n\r\n  async getAiDealerMoves() {\r\n    console.log(\"starting dealer moves\")\r\n    console.log(\"dealer total\", aiDealerHand.getTotalCardValue())\r\n    while (aiDealerHand.getTotalCardValue() < 17) {\r\n        console.log(\"aiDealer is hitting\")\r\n        this.hit(\"aiDealer\")\r\n    }\r\n    this.getWinner(aiDealerHand, aiPlayerHand)\r\n    }\r\n\r\n  async getAiMoves() {\r\n    while (aiPlayerHand.busted === false) {\r\n      var predictions = await this.getPrediction()\r\n      console.log(\"predictions: \", predictions)\r\n      if (predictions[0] >= predictions[1] && predictions[0] > 0.5) {\r\n        console.log(\"ai is hitting\")\r\n        this.hit(\"aiPlayer\")\r\n      }\r\n      else {\r\n        console.log(\"ai is holding\")\r\n        break\r\n      }\r\n    }\r\n    if (aiPlayerHand.total > 21) {\r\n      console.log(\"AI player busted!\")\r\n    }\r\n    this.getAiDealerMoves(aiDealerHand, aiPlayerHand)\r\n  }\r\n\r\n  getCards(hand, playerType) {\r\n    var cards = []\r\n    for (var i=0; i<hand.cards.length; i++) {\r\n        var card = hand.cards[i]\r\n        cards.push(getCard(card, i))\r\n        if (playerType === \"dealer\" & this.state.playerDone === false) {\r\n          i = hand.cards.length\r\n        }\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  getCount(hand1, hand2) {\r\n    return hand1.count + hand2.count\r\n  }\r\n\r\n  getDealerMoves(dealer, player) {\r\n    while (dealer.getTotalCardValue() < 17) {\r\n      if (dealer.owner === \"dealer\") {\r\n        this.hit(\"dealer\")\r\n      }\r\n      else {\r\n        this.hit(\"aiDealer\")\r\n      }\r\n    }\r\n    this.getWinner(dealer, player)\r\n    this.getAiMoves()\r\n    this.setState({\r\n      restartDisabled: false\r\n    })\r\n  }\r\n\r\n  async getPrediction() {\r\n    model = await tf.loadLayersModel('model.json');\r\n    var hitPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 1]])\r\n    var stayPredictionInput = tf.tensor([[aiDealerHand.cards[0], aiPlayerHand.getTotalCardValue(), this.getCount(aiDealerHand, aiPlayerHand), aiPlayerHand.soft, 0]])\r\n    var hitPrediction = model.predict(hitPredictionInput).dataSync()[0]\r\n    var stayPrediction = model.predict(stayPredictionInput).dataSync()[0]\r\n    console.log(\"hit: \", hitPrediction, \" stay: \", stayPrediction)\r\n    return [hitPrediction, stayPrediction]\r\n    }\r\n\r\n  getWinner(dealer, player) {\r\n    var winnerMessage = \"\"\r\n    if (player.total > 21) {\r\n      winnerMessage = \"Player Busted! Dealer Wins!\"\r\n    }\r\n    else if (dealer.busted) {\r\n      winnerMessage = \"Dealer Busted! Player Wins!\"\r\n    }\r\n    else if (dealer.total > player.total) {\r\n      winnerMessage = \"Dealer Wins!\"\r\n    }\r\n    else if (player.total > dealer.total) {\r\n      winnerMessage = \"Player Wins!\"\r\n    }\r\n    else {winnerMessage = \"Push!\"}\r\n    if (dealer.owner === \"dealer\") {\r\n      this.setState({\r\n        message: winnerMessage\r\n      })\r\n    }\r\n    else {\r\n      this.setState({\r\n        aiMessage: winnerMessage\r\n      })\r\n    }\r\n  }\r\n\r\n  hit(handOwner) {\r\n   switch (handOwner) {\r\n     case \"player\":\r\n       this.setState({\r\n         playerHand: playerHand.addCard(deck)\r\n       })\r\n       if (playerHand.busted) {\r\n         console.log(\"bust\");\r\n         this.setState({\r\n         hitDisabled: true,\r\n         stayDisabled: true,\r\n         restartDisabled: false,\r\n         playerDone: true,\r\n         dealerDone: true,\r\n         message: \"Player busted! Dealer Wins!\"\r\n       })\r\n       this.getDealerMoves(dealerHand, playerHand)\r\n       }\r\n       break;\r\n     case \"dealer\":\r\n        this.setState({\r\n          dealerHand: dealerHand.addCard(deck)\r\n        })\r\n        if (dealerHand.busted) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            message: \"Dealer Busted! Player Wins!\"\r\n          })\r\n        }\r\n        else if (dealerHand.total >= 17 && dealerHand.total <= 21) {\r\n          this.setState({\r\n            dealerDone: true,\r\n            restartDisabled: false,\r\n          })\r\n        }\r\n        break;\r\n     case \"aiPlayer\":\r\n        this.setState({\r\n          aiPlayerHand: aiPlayerHand.addCard(aiDeck)\r\n        })\r\n        if (aiPlayerHand.busted) {\r\n          this.setState({\r\n            aiPlayerDone: true,\r\n            aiMessage: \"AI Busted! AI Dealer Wins!\"\r\n          })\r\n        }\r\n        break;\r\n     case \"aiDealer\":\r\n       this.setState({\r\n         aiDealerHand: aiDealerHand.addCard(aiDeck)\r\n       })\r\n       if (aiDealerHand.busted) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           aiMessage: \"Dealer Busted! Player Wins!\"\r\n         })\r\n       }\r\n       else if (aiDealerHand.total >= 17 && aiDealerHand.total <= 21) {\r\n         this.setState({\r\n           dealerDone: true,\r\n           restartDisabled: false,\r\n         })\r\n       }\r\n        break;\r\n     default:\r\n        console.log(\"Error: Player type not recognized\")\r\n        break;\r\n      }\r\n  }\r\n\r\n  async loadTheModel () {\r\n    var model\r\n    try {\r\n      model = await tf.loadLayersModel('model.json');\r\n      return model\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      console.log(\"failed load model\");\r\n    }\r\n  }\r\n\r\n  startGame() {\r\n    this.setState({\r\n      playerHand: [],\r\n      dealerHand: [],\r\n      playerDone: false,\r\n      dealerDone: false,\r\n      hitDisabled: false,\r\n      stayDisabled: false,\r\n      restartDisabled: true,\r\n      message: \"hit or stay\",\r\n      aiMessage: \"AI Side\"\r\n    })\r\n    buildDeck()\r\n    dealCards()\r\n    if (this.checkForBlackjack(dealerHand, playerHand) === true) {\r\n      this.setState({\r\n        hitDisabled: true,\r\n        stayDisabled: true,\r\n        restartDisabled: false\r\n      })\r\n    }\r\n    console.log('start')\r\n  }\r\n\r\n  stay(hand) {\r\n    switch (hand.owner) {\r\n      case \"player\":\r\n        this.setState({\r\n          hitDisabled: true,\r\n          stayDisabled: true,\r\n          playerDone: true,\r\n        })\r\n        this.getDealerMoves(dealerHand, playerHand)\r\n      case \"aiPlayer\":\r\n        console.log(\"aiPlayer stayed\")\r\n      default:\r\n        console.log(\"unknown player stayed\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box style={gameStyle}>\r\n        <Box style={playerSideStyle}>\r\n          <Box>\r\n            {this.state.message}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            Dealer\r\n            {this.getCards(dealerHand, \"dealer\")}\r\n          </Box>\r\n        <Box style={playerStyle}>\r\n          Player\r\n          {this.getCards(playerHand, \"player\")}\r\n          <div style={gameButtons}>\r\n            <button disabled={this.state.hitDisabled} onClick={() => this.hit(\"player\")} style={gameButton}>HIT</button>\r\n            <button disabled={this.state.stayDisabled} onClick={() => this.stay(playerHand)} style={gameButton}>STAY</button>\r\n            <button disabled={this.state.restartDisabled} onClick={() => this.startGame()} style={gameButton}>PLAY AGAIN</button>\r\n          </div>\r\n          </Box>\r\n        </Box>\r\n        <Box style={aiSideStyle}>\r\n          <Box>\r\n            {this.state.aiMessage}\r\n          </Box>\r\n          <Box style={dealerStyle}>\r\n            AI Dealer\r\n            {this.getCards(aiDealerHand, \"dealer\")}\r\n          </Box>\r\n          <Box style={aiStyle}>\r\n            AI Player\r\n            {this.getCards(aiPlayerHand, \"aiPlayer\")}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nfunction buildDeck() {\r\n  deck = []\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 2; j < 12; j++) {\r\n      if (j === 10) {\r\n        deck.push(j)\r\n        deck.push(j)\r\n        deck.push(j)\r\n      }\r\n      deck.push(j)\r\n    }\r\n  }\r\n  shuffle(deck)\r\n  aiDeck = deck.slice()\r\n  console.log(\"building deck\")\r\n}\r\n\r\nfunction dealCards() {\r\n  playerHand.cards = [];\r\n  dealerHand.cards = [];\r\n  aiPlayerHand.cards = [];\r\n  aiDealerHand.cards = [];\r\n  for (var i = 0; i < 2; i++) {\r\n    playerHand.addCard(deck)\r\n    dealerHand.addCard(deck)\r\n    aiPlayerHand.addCard(aiDeck)\r\n    aiDealerHand.addCard(aiDeck)\r\n  }\r\n  aiPlayerHand.getTotalCardValue()\r\n  aiDealerHand.getTotalCardValue()\r\n  console.log(\"dealing cards\")\r\n}\r\n\r\nfunction getCard(card, index) {\r\n  return (\r\n    <Image key={index.toString()} style={cardStyle} src={cardValues[card]}/>\r\n  );\r\n}\r\n\r\nfunction shuffle(array) {\r\n  var currentIndex = array.length,  randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex], array[currentIndex]];\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default BlackjackGame;\r\n"]},"metadata":{},"sourceType":"module"}